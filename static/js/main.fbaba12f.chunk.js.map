{"version":3,"sources":["images/dm_logo.png","images/dm__icon.png","images/deck_case.png","ui_components/AuthFrame.js","authentication/SignIn.js","authentication/SignUp.js","authentication/ForgetPassword.js","authentication/VerifSignInDialog.js","authentication/VerifForgetPasswordDialog.js","authentication/DmAuthenticator.js","ui_components/SideNav.js","dm_components/ConfirmDialog.js","App.js","router/PrivateRoute.js","ui_components/GridView.js","dm_components/DeckView.js","dm_components/DeckNameDialog.js","redux/actions/uiEventActions.js","redux/actions/dmDeckActions.js","pages/DeckManager.js","dm_components/CardView.js","dm_components/CardDetailDialog.js","pages/DeckEditor.js","dm_components/ProductView.js","redux/actions/dmProductActions.js","pages/ProductGallery.js","redux/actions/dmCardActions.js","dm_components/InsertCardDialog.js","pages/CardGallery.js","router/DmRouter.js","languages/DmIntlProvider.js","redux/reducers/publicSharedDeckReducer.js","redux/actions/dashboardActions.js","redux/reducers/privateSharedDeckReducer.js","redux/reducers/recommendDeckReducer.js","redux/reducers/dmProductReducer.js","redux/reducers/uiEventReducer.js","redux/reducers/appReducer.js","redux/reducers/dmCardReducer.js","redux/reducers/dmDeckReducer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","backgroundColor","padding","props","classes","children","react_default","a","createElement","Paper_default","elevation","SignIn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTextChange","event","setState","defineProperty","target","id","value","handleClickShowPassword","showPassword","state","clearError","emailErrorMsg","passwordErrorMsg","email","password","prevProps","errorObj","errObject","code","message","_this2","onSubmit","e","preventDefault","awsSignIn","core_index_es","container","direction","spacing","item","Typography_default","variant","color","index_es","alignItems","xs","icons_index_es","label","type","error","helperText","fullWidth","onInput","onChange","htmlFor","endAdornment","position","aria-label","onClick","justify","changeState","Component","SignUp","usernameErrorMsg","username","includes","awsSignUp","ForgetPassword","awsForgetPassword","VerifSignInDialog","codeErrorMsg","handleClose","disableBackdropClick","disableEscapeKeyDown","open","onExit","aria-labelledby","autoFocus","awsResendCode","awsVerifyCode","VerifForgetPasswordDialog","lg","awsVerifyPasswordCode","AWS_Config","API","endpoints","custom_header","asyncToGenerator","regenerator_default","mark","_callee","token","wrap","_context","prev","next","Auth","currentSession","sent","idToken","jwtToken","abrupt","Authorization","stop","Amplify","configure","DmAuthenticator","signIn","then","user","history","push","catch","err","childError","signUp","trim","length","attributes","name","data","authuser","showVerifCodeDialog","forgetPassword","forgotPassword","forgetPsEmail","showVerifPasswordCodeDialog","resentSignUpCode","resendSignUp","verificationSignInError","verifySignUpCode","confirmSignUp","verifyForgetPasswordCode","newPassword","forgotPasswordSubmit","authState","verificationForgetPsError","targetAuthState","authUser","className","Grid_default","xl","src","dmLogo","alt","ui_components_AuthFrame","authObject","authentication_SignIn","authentication_SignUp","authentication_ForgetPassword","authentication_VerifSignInDialog","authentication_VerifForgetPasswordDialog","withRouter","SideNav","dmIcon","Link","to","title","placement","showLanguageMenu","showConfirmDialog","ConfirmDialog","_ref","closeDialog","dialogTitle","dialogMessage","submitAction","submitButtonText","aria-describedby","App","signOut","console","log","toggleDrawer","showDrawer","languageMenuAnchorEl","_this$props","mainComponent","titleId","_this$state","ui_components_SideNav","currentTarget","mobileMenu","menuButton","grow","componentWrapper","compName","gutterBottom","dm_components_ConfirmDialog","anchorEl","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","onClose","anchor","tabIndex","role","onKeyDown","primary","drawerText","theme","_root","paddingTop","height","breakpoints","up","marginLeft","display","flexGrow","marginRight","PrivateRoute","shouldRender","currentAuthenticatedUser","unlisten","listen","component","rest","objectWithoutProperties","Route","assign","render","src_App","Redirect","pathname","gridViewBox","flexWrap","justifyContent","width","overflowY","deckViewBox","textAlign","deckContent","fontFamily","fontWeight","fontSize","marginTop","deckImage","maxWidth","deckDetailLink","textDecoration","flexBasis","&:hover","border","borderRadius","_ref2","deck","deckId","_id","imgDeckCase","DeckNameDialog","deckName","submit","handleDeckName","START_API_CALL","FINISH_API_CALL","FINISH_API_ERR","startAPICall","finishAPICall","finishAPIError","errMsg","RECEIVE_PLAYER_DECK_LIST","RECEIVE_SINGLE_PLAYER_DECK","RESET_DECK_LIST","resetDeckList","getPlayerDecks","dispatch","get","response","decks","getPlayerDeck","DeckManager","createDeck","createPlayerDeck","closeDeckNameDialog","showDeckNameDialog","dmDeckList","apiCallStatus","react","ui_components_GridView","map","dm_components_DeckView","key","addFab","dm_components_DeckNameDialog","connect","uiEvents","myInit","body","userId","post","right","unit","bottom","deleteFab","cardViewBox","cardContent","cardImage","cardDetailLink","card","handleClick","classnames","App_Config","dmCardImageLink","setId","setNumber","toUpperCase","gridContainer","gridGap","gridItemImgContainer","gridItemDetailContainer","effectList","listStyleType","gridTemplateColumns","deckAction","DialogTitle_default","disableTypography","civilizations","civil","rarityCd","cost","mana","undefined","power","races","race","light","effects","effect","index","DeckEditor","editDeckName","cachedDeck","newDeck","objectSpread","removeCardFromDeck","removingCard","cards","filter","handleDialogClose","handleDialogOpen","showCardDetailDialog","closeCreateDeckDialog","location","dmDeck","_this$props2","updatePlayerDecks","deletePlayerDeck","gridTitle","dm_components_CardView","saveFab","dm_components_CardDetailDialog","deckObject","requestBody","put","del","flexColumnBox","flexFlow","gridWrapper","firstColumn","secondColumn","gridTemplateRows","parseSetId","setCode","split","toLocaleUpperCase","productViewBox","productContent","productImage","cardGalleryLink","product","productType","action","seriesName","seriesNumber","primaryId","cloudfrontImageLink","RECEIVE_BOOSTER_PACK_LIST","RECEIVE_STARTER_DECK_LIST","getBoosterPack","boosterPacks","getStarterDeck","starterDecks","ProductGallery","getDmProduct","dmProductList","sm","appBarButtonWrapper","dm_components_ProductView","topFab","searchfab","RECEIVE_CARDS","RESET_CARD_LIST","resetCardList","receiveCards","json","InsertCardDialog","handleChange","quantity","insertCardsToDeck","formControl","inputProps","CardGallery","handleCardDetailDialogClose","handleInsertCardDialogClose","showInsertCardDialog","getCardsBySetId","getCardsByDeckId","dmCardList","window","scrollTo","dm_components_InsertCardDialog","DmRouter","BrowserRouter","basename","process","Switch","path","router_PrivateRoute","exact","DmIntlProvider","changeLanguage","langCode","document","getElementsByTagName","setAttribute","locale","messages","intlMessagesEN","intlMessagesZH","intlMessagesJA","addLocaleData","concat","toConsumableArray","en","zh","ja","React","cloneElement","publicSharedDeckReducer","arguments","privateSharedDeckReducer","recommendDeckReducer","dmProductReducer","uiEventReducer","deckAPIErrMsg","appReducer","combineReducers","publicSharedDecks","privateSharedDecks","recommendDecks","hostname","match","createMuiTheme","DMTheme","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","core_styles","es","languages_DmIntlProvider","router_DmRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbaba12f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dm_logo.605740b1.png\";","module.exports = __webpack_public_path__ + \"static/media/dm__icon.3bf9ba8e.png\";","module.exports = __webpack_public_path__ + \"static/media/deck_case.9b7b9245.png\";","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n        padding: '30px'\r\n    }\r\n};\r\n\r\nfunction AuthFrame(props) {\r\n    const { classes, children } = props;\r\n\r\n    return (\r\n        <Paper classes={{root: classes.root}} elevation={1}>\r\n          { children }\r\n        </Paper>\r\n      );\r\n}\r\nexport default withStyles(styles)(AuthFrame);","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Button, TextField, Input, InputLabel, InputAdornment, IconButton, FormControl, FormHelperText } from '@material-ui/core';\r\nimport { Lock, Visibility, VisibilityOff, AccountCircle } from '@material-ui/icons';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            emailErrorMsg: \"\",\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            showPassword: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj === \"Username cannot be empty\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"UserNotFoundException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email does not exist\"});\r\n            }\r\n            else if(errorObj.code === \"UserNotConfirmedException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Account is not confirmed\"});\r\n            }\r\n            else if(errorObj.code === \"NotAuthorizedException\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Incorrect password\"});\r\n            }\r\n            else if(errorObj.code === \"UnexpectedLambdaException\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password cannot be empty\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({emailErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange = event =>\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    };\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"email\")\r\n        {\r\n            this.setState({ emailErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"password\")\r\n        {\r\n            this.setState({ passwordErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.awsSignIn(this.state.email, this.state.password); } }>\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleSignIn\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\"\r\n                                    label={<FormattedMessage id=\"txtEmail\"/>}\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    error={this.state.emailErrorMsg !== \"\"}\r\n                                    helperText={this.state.emailErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Lock />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <FormControl fullWidth={true} error={this.state.passwordErrorMsg !== \"\"}>\r\n                                    <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                    <Input \r\n                                        id=\"password\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onInput={(event) => this.clearError(event)}\r\n                                        onChange={(event) => this.handleTextChange(event)}\r\n                                        endAdornment=\r\n                                        {\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowPassword}>\r\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                                        {this.state.passwordErrorMsg !== '' && <FormHelperText>{this.state.passwordErrorMsg}</FormHelperText>}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"secondary\" type=\"submit\" fullWidth={true} ><FormattedMessage id=\"btnSignIn\"/></Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"forgetPassword\")}><FormattedMessage id=\"btnForgetPassword\"/></Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signUp\")}><FormattedMessage id=\"btnCreateAccount\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Button, TextField, Input, InputLabel, InputAdornment, IconButton, FormControl, FormHelperText } from '@material-ui/core';\r\nimport { Lock, Visibility, VisibilityOff, Email, AccountCircle  } from '@material-ui/icons';\r\n\r\nclass SignUp extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            emailErrorMsg: \"\",\r\n            username: \"\",\r\n            usernameErrorMsg: \"\",\r\n            password: \"\",\r\n            passwordErrorMsg: \"\",\r\n            showPassword: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj.code === \"EmptyUserException\") \r\n            {\r\n                this.setState({usernameErrorMsg: \"Username cannot be empty\"});\r\n            }\r\n            else if(errorObj === \"Username cannot be empty\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"UsernameExistsException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email already in used\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidParameterException\" && errorObj.message.includes(\"Invalid email\")) \r\n            {\r\n                this.setState({emailErrorMsg: \"Invalid email address format.\"});\r\n            }\r\n            else if(errorObj === \"Password cannot be empty\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password cannot be empty\"});\r\n            }\r\n            else if(errorObj.message.includes(\"equal to 6\") || errorObj.message.includes(\"long enough\"))\r\n            {\r\n                this.setState({passwordErrorMsg: \"Password length must at least has 8 characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"uppercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have uppercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"lowercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have lowercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"numeric \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have numeric characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"symbol \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have symbol characters\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({emailErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    };\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"email\")\r\n        {\r\n            this.setState({ emailErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"username\")\r\n        {\r\n            this.setState({ usernameErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"password\")\r\n        {\r\n            this.setState({ passwordErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.awsSignUp(this.state.email, this.state.username, this.state.password)}} >\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleSignUp\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Email />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\"\r\n                                    label={<FormattedMessage id=\"txtEmail\"/>}\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    error={this.state.emailErrorMsg !== \"\"}\r\n                                    helperText={this.state.emailErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"username\"\r\n                                    label={<FormattedMessage id=\"txtUsername\"/>}\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    error={this.state.usernameErrorMsg !== \"\"}\r\n                                    helperText={this.state.usernameErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Lock />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <FormControl fullWidth={true} error={this.state.passwordErrorMsg !== \"\"}>\r\n                                    <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                    <Input \r\n                                        id=\"password\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onInput={(event) => this.clearError(event)}\r\n                                        onChange={(event) => this.handleTextChange(event)}\r\n                                        endAdornment=\r\n                                        {\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowPassword}>\r\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                                        {this.state.passwordErrorMsg !== \"\" && <FormHelperText>{this.state.passwordErrorMsg}</FormHelperText>}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" fullWidth={true} ><FormattedMessage id=\"titleSignUp\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signIn\")}><FormattedMessage id=\"btnSignInInstead\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { AccountCircle  } from '@material-ui/icons';\r\n\r\nclass ForgetPassword extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            emailErrorMsg: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj === \"Username cannot be empty\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"UserNotFoundException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email does not exist\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({emailErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    clearError = (event) => {\r\n        this.setState({ emailErrorMsg: ''});\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.awsForgetPassword(this.state.email)}} >\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleForgetPassword\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\"\r\n                                    label={<FormattedMessage id=\"txtEmail\"/>}\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    error={this.state.emailErrorMsg !== \"\"}\r\n                                    helperText={this.state.emailErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" fullWidth={true} ><FormattedMessage id=\"btnGetNewPassword\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signIn\")}><FormattedMessage id=\"btnSignInInstead\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgetPassword;","import React, { Component } from 'react';\r\nimport { Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n\r\nclass VerifSignInDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            code: '',\r\n            codeErrorMsg: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n                this.setState({codeErrorMsg: \"Invalid verification code provided, please try again\"});\r\n            if(errorObj === \"Code cannot be empty\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Code cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"CodeMismatchException\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Invalid verification code provided, please try again\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({codeErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({code: event.target.value});\r\n    }\r\n\r\n    clearError = (event) => {\r\n        this.setState({ codeErrorMsg: ''});\r\n    }\r\n\r\n    handleClose = () => {\r\n        //clear form\r\n        this.setState({\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            code: '',\r\n            codeErrorMsg: \"\",\r\n            showPassword: false\r\n        });\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                onExit={() => this.handleClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Enter Verification Code</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Verification code will send to your email soon. Please enter it in \r\n                        below text field.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        label=\"Verification Code\"\r\n                        value={this.state.code} \r\n                        error={this.state.codeErrorMsg !== \"\"}\r\n                        helperText={this.state.codeErrorMsg}\r\n                        fullWidth\r\n                        onInput={(event) => this.clearError(event)}\r\n                        onChange={(event) => this.handleTextChange(event)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.props.awsResendCode()} >Resend Code</Button>\r\n                    <Button onClick={() => this.props.awsVerifyCode(this.state.code)} >Submit</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerifSignInDialog;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Grid, Input, InputLabel, InputAdornment, IconButton, FormControl, FormHelperText, Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nclass VerifForgetPasswordDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            code: '',\r\n            codeErrorMsg: \"\",\r\n            showPassword: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj === \"Code cannot be empty\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Code cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"CodeMismatchException\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Invalid verification code provided, please try again.\"});\r\n            }\r\n            else if(errorObj === \"Password cannot be empty\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password cannot be empty\"});\r\n            }\r\n            else if(errorObj.message.includes(\"equal to 6\") || errorObj.message.includes(\"long enough\"))\r\n            {\r\n                this.setState({passwordErrorMsg: \"Password length must at least has 8 characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"uppercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have uppercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"lowercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have lowercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"numeric \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have numeric characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"symbol \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have symbol characters\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({codeErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    };\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"password\")\r\n        {\r\n            this.setState({ passwordErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"code\")\r\n        {\r\n            this.setState({ codeErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        //clear form\r\n        this.setState({\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            code: '',\r\n            codeErrorMsg: \"\",\r\n            showPassword: false\r\n        });\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                onExit={() => this.handleClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Enter New Password and Verification Code</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Verification code will send to your email soon. Please enter the new password and the code in \r\n                        below text field.\r\n                    </DialogContentText>\r\n                    <Grid container spacing={16}>\r\n                        <Grid item xs={12} lg={6}>\r\n                            <FormControl fullWidth={true} error={this.state.passwordErrorMsg !== \"\"}>\r\n                                <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                <Input \r\n                                    id=\"password\"\r\n                                    type={this.state.showPassword ? 'text' : 'password'}\r\n                                    value={this.state.password}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}\r\n                                    endAdornment=\r\n                                    {\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"Toggle password visibility\"\r\n                                                onClick={this.handleClickShowPassword}>\r\n                                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }/>\r\n                                    {this.state.passwordErrorMsg !== \"\" && <FormHelperText>{this.state.passwordErrorMsg}</FormHelperText>}\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={6}> \r\n                            <TextField id=\"code\"\r\n                                label=\"Verification Code\"\r\n                                value={this.state.code} \r\n                                error={this.state.codeErrorMsg !== \"\"}\r\n                                helperText={this.state.codeErrorMsg}\r\n                                fullWidth\r\n                                onInput={(event) => this.clearError(event)}\r\n                                onChange={(event) => this.handleTextChange(event)}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.props.awsVerifyPasswordCode(this.state.password, this.state.code)} >Submit</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerifForgetPasswordDialog;","import React, { Component } from 'react';\r\nimport dmLogo from '../images/dm_logo.png';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport AuthFrame from '../ui_components/AuthFrame';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport ForgetPassword from './ForgetPassword';\r\nimport VerifSignInDialog from './VerifSignInDialog';\r\nimport VerifForgetPasswordDialog from './VerifForgetPasswordDialog';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AWS_Config from '../config/aws-config.json';\r\n\r\nAWS_Config.API.endpoints[0].custom_header = async () => {\r\n    let token = (await Auth.currentSession()).idToken.jwtToken;\r\n    // console.log(token);\r\n    return { Authorization: token };\r\n}\r\nAmplify.configure(AWS_Config);\r\n\r\nclass DmAuthenticator extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            authState: 'signIn',\r\n            authUser: null,\r\n            childError: null,\r\n            verificationSignInError: null,\r\n            verificationForgetPsError: null,\r\n            forgetPsEmail: '',\r\n            showVerifCodeDialog: false,\r\n            showVerifPasswordCodeDialog: false\r\n        };\r\n    }\r\n\r\n    signIn = (email, password) => {\r\n        Auth.signIn(email, password)\r\n            .then(user => {\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({childError: err})\r\n            });\r\n    }\r\n\r\n    signUp = (email, username, password) => {\r\n        if(username.trim().length === 0) //Amplify does not check email length\r\n        {\r\n            this.setState({childError: {code: \"EmptyUserException\"}})\r\n        }\r\n        else\r\n        {\r\n            Auth.signUp({\r\n                username: email,\r\n                password: password,\r\n                attributes: \r\n                {\r\n                    email: email,\r\n                    name: username\r\n                }\r\n            })\r\n            .then(data => {\r\n                // if success, system will send email with verification code\r\n                // show dialog for verification code input\r\n                this.setState({authuser: data.user, showVerifCodeDialog: true});\r\n            })\r\n            .catch(err => {\r\n                this.setState({childError: err})\r\n            });\r\n        }\r\n    }\r\n\r\n    forgetPassword = (email) => {\r\n\r\n        // we only want to run when input does not look like email\r\n        Auth.forgotPassword(email)\r\n            .then(data => {\r\n                this.setState({forgetPsEmail: email, showVerifPasswordCodeDialog: true});\r\n            })\r\n            .catch(err => this.setState({childError: err}));\r\n    }\r\n\r\n    resentSignUpCode = () => {\r\n        Auth.resendSignUp(this.state.authuser.username)\r\n            .catch(err => this.setState({verificationSignInError: err}));\r\n    }\r\n\r\n    verifySignUpCode = (code) => {\r\n        Auth.confirmSignUp(this.state.authuser.username, code)\r\n            .then(data => {\r\n                this.setState({showVerifCodeDialog: false});\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => this.setState({verificationSignInError: err}));\r\n    }\r\n\r\n    verifyForgetPasswordCode = (newPassword, code) => {\r\n        Auth.forgotPasswordSubmit(this.state.forgetPsEmail, code, newPassword)\r\n            .then(data => {\r\n                this.setState({showVerifPasswordCodeDialog: false, authState: 'signIn'});\r\n                this.changeState('signIn');\r\n            })\r\n            .catch(err => this.setState({verificationForgetPsError: err}));\r\n    }\r\n\r\n    changeState = (targetAuthState) => {\r\n        this.setState({authState: targetAuthState});\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"DmAuthenticator\">\r\n                <Grid container className=\"Fullpage-container\" \r\n                    direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} xl={4}>\r\n                        <img src={dmLogo} className=\"Login-logo\" alt=\"logo\" />\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <AuthFrame>\r\n                            {(function(authObject) \r\n                                {\r\n                                    switch(authObject.state.authState) \r\n                                    {\r\n                                        case 'signIn':\r\n                                            return <SignIn changeState={authObject.changeState} awsSignIn={authObject.signIn} errObject={authObject.state.childError} />;\r\n                                        case 'signUp':\r\n                                            return <SignUp changeState={authObject.changeState} awsSignUp={authObject.signUp} errObject={authObject.state.childError}/>;\r\n                                        case 'forgetPassword':\r\n                                            return <ForgetPassword changeState={authObject.changeState} awsForgetPassword={authObject.forgetPassword} errObject={authObject.state.childError}/>;\r\n                                        default:\r\n                                            return null;\r\n                                    }\r\n                                })(this)\r\n                            }\r\n                        </AuthFrame>\r\n                    </Grid>\r\n                </Grid>\r\n                <VerifSignInDialog open={this.state.showVerifCodeDialog} awsVerifyCode={this.verifySignUpCode}  awsResendCode={this.resentSignUpCode} errObject={this.state.verificationSignInError}/>\r\n                <VerifForgetPasswordDialog open={this.state.showVerifPasswordCodeDialog}  awsVerifyPasswordCode={this.verifyForgetPasswordCode} errObject={this.state.verificationForgetPsError}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DmAuthenticator);","import React from 'react';\r\nimport './SideNav.css';\r\nimport { Tooltip, IconButton } from '@material-ui/core';\r\nimport { Collections, Work, Language ,PowerSettingsNew } from '@material-ui/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport dmIcon from '../images/dm__icon.png'\r\n\r\nfunction SideNav(props) {\r\n    return (\r\n        <div id=\"sidenav\">\r\n            <div id=\"topSideNav\">\r\n                <img alt=\"DM\" src={dmIcon} id=\"dmIcon\"/>\r\n                <hr/>\r\n                <Link to=\"/deckManager\">\r\n                    <Tooltip title=\"Deck Manager\" placement=\"right\">\r\n                        <IconButton>\r\n                            <Work />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n                <Link to=\"/productGallery\">\r\n                    <Tooltip title=\"Product Gallery\" placement=\"right\">\r\n                        <IconButton>\r\n                            <Collections />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n            </div>\r\n            <div id=\"bottomSideNav\">\r\n                <Tooltip title=\"Langauges Setting\" placement=\"right\">\r\n                    <IconButton onClick={(e) => props.showLanguageMenu(e)}>\r\n                        <Language />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Logout\" placement=\"right\">\r\n                    <IconButton onClick={() => props.showConfirmDialog()}>\r\n                        <PowerSettingsNew />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SideNav;","import React from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n\r\nconst ConfirmDialog = ({open, closeDialog, dialogTitle, dialogMessage, submitAction, submitButtonText}) => (\r\n    <Dialog\r\n        open={open}\r\n        aria-labelledby=\"logout-dialog-title\"\r\n        aria-describedby=\"logout-dialog-description\">\r\n        <DialogTitle id=\"logout-dialog-title\">{dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText id=\"logout-dialog-description\">\r\n                {dialogMessage}\r\n            </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={() => closeDialog()}>Cancel</Button>\r\n            <Button onClick={() => submitAction()} autoFocus>{submitButtonText}</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nexport default ConfirmDialog;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport SideNav from './ui_components/SideNav';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Auth } from 'aws-amplify';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Menu, MenuItem, Toolbar, IconButton, Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Menu as MenuIcon, Language ,PowerSettingsNew, Work, Collections } from '@material-ui/icons';\r\nimport ConfirmDialog from './dm_components/ConfirmDialog'\r\n\r\nconst styles = theme => (\r\n  {\r\n    root: {\r\n      paddingTop: '56px',\r\n      height: '97vh',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: '50px'\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        marginLeft: '60px'\r\n      }\r\n  },\r\n  compName: {\r\n    display: 'none'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerText: {\r\n    \"color\": \"#eeeeee\"\r\n  },\r\n  componentWrapper: {\r\n    padding: '10px'\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    root: {\r\n      paddingTop: '0px'\r\n    },\r\n    compName: {\r\n      display: 'block'\r\n    },\r\n    mobileMenu: {\r\n      display: 'none'\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends Component \r\n{\r\n  constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n          languageMenuAnchorEl : null,\r\n          showConfirmDialog: false,\r\n          showDrawer: false\r\n        };\r\n    }\r\n\r\n  signOut = () => {\r\n      Auth.signOut()\r\n        .then(data => {this.setState({showConfirmDialog: false}); this.props.history.push('/auth');})\r\n        .catch(err => console.log(err));\r\n  }\r\n\r\n  toggleDrawer = (open) => () => {\r\n    this.setState({\r\n      showDrawer: open,\r\n    });\r\n  };\r\n\r\n  render() \r\n  {\r\n    const { mainComponent: Component, classes, titleId } = this.props;\r\n    const { languageMenuAnchorEl, showConfirmDialog, showDrawer } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <SideNav \r\n          showConfirmDialog={() => this.setState({showConfirmDialog: true})} \r\n          showLanguageMenu={(e) => this.setState({languageMenuAnchorEl: e.currentTarget})} />\r\n        <div className={classes.root}>\r\n          <AppBar position=\"fixed\" color=\"primary\" className={classes.mobileMenu}>\r\n            <Toolbar>\r\n              <IconButton className={classes.menuButton} \r\n                color=\"inherit\" \r\n                aria-label=\"Menu\"\r\n                onClick={this.toggleDrawer(true)}>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                <FormattedMessage id={titleId}/>\r\n              </Typography>\r\n              <IconButton color=\"inherit\" onClick={(e) => this.setState({languageMenuAnchorEl: e.currentTarget})}>\r\n                <Language />\r\n              </IconButton>\r\n              <IconButton color=\"inherit\" onClick={() => this.setState({showConfirmDialog: true})}>\r\n                <PowerSettingsNew />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={classes.componentWrapper}>\r\n            <div>\r\n              <Typography variant=\"h3\" color=\"textPrimary\" className={classes.compName} gutterBottom><FormattedMessage id={titleId}/></Typography>\r\n              <Component />\r\n            </div>\r\n            \r\n          </div>\r\n        </div >\r\n        <ConfirmDialog open={showConfirmDialog}\r\n          dialogTitle=\"Logout\"\r\n          dialogMessage=\"Are you sure you want to log out?\"\r\n          closeDialog={() => this.setState({showConfirmDialog: false})}\r\n          submitButtonText=\"Logout\"\r\n          submitAction={this.signOut}/>\r\n        <Menu\r\n          id=\"langauge-menu\"\r\n          anchorEl={languageMenuAnchorEl}\r\n          open={Boolean(languageMenuAnchorEl)}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          onClose={() => this.setState({languageMenuAnchorEl: null})}\r\n        >\r\n          <MenuItem onClick={() => { this.setState({languageMenuAnchorEl: null});}}>English</MenuItem>\r\n          <MenuItem onClick={() => { this.setState({languageMenuAnchorEl: null});}}>Traditional Chinese</MenuItem>\r\n          <MenuItem onClick={() => { this.setState({languageMenuAnchorEl: null});}}>Japanese</MenuItem>\r\n        </Menu>\r\n        <Drawer anchor=\"left\" open={showDrawer} onClose={this.toggleDrawer(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}>\r\n            <List>\r\n              <Link to=\"/deckManager\">\r\n                <ListItem>\r\n                    <ListItemIcon><Work /></ListItemIcon>\r\n                    <ListItemText classes={{ primary: classes.drawerText }} primary={<FormattedMessage id=\"titleDeckManager\" />} />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"/productGallery\">\r\n                <ListItem>\r\n                    <ListItemIcon><Collections /></ListItemIcon>\r\n                    <ListItemText classes={{ primary: classes.drawerText }} primary={<FormattedMessage id=\"titleProductGallery\" />} />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(App));\r\n","import React, { Component } from 'react';\r\nimport {  Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { Auth } from 'aws-amplify';\r\nimport App from '../App';\r\n\r\nclass PrivateRoute extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            shouldRender: false,\r\n            authUser: null\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // check user login when they first launch the page\r\n        Auth.currentAuthenticatedUser()\r\n            .then(user => this.setState({shouldRender: true,authUser: user}))\r\n            // when shouldRender still set to false, render() would not render anything\r\n            // that's why we cannot use setState here\r\n            .catch(err => this.props.history.push('/auth')); \r\n\r\n        // check user login when the path changed\r\n        this.unlisten = this.props.history.listen(() => {\r\n            Auth.currentAuthenticatedUser()\r\n            .then(user => {this.setState({shouldRender: true,authUser: user})})\r\n            .catch(err => {this.setState({authUser: null})});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        this.unlisten();\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { component: Component,  titleId, ...rest } = this.props;\r\n        const { shouldRender, authUser } = this.state;\r\n\r\n        if (!shouldRender) return null;\r\n        \r\n        return(\r\n            <Route {...rest}\r\n                render={props => {\r\n                    return authUser !== null? \r\n                        (<App authUser={authUser} mainComponent={Component} titleId={titleId} {...props} />) :\r\n                        (<Redirect to={{ pathname: \"/auth\"}} />)\r\n                }}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PrivateRoute);\r\n","import React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles  = theme => (\r\n{\r\n    gridViewBox: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'flex-start',\r\n        padding: '10px',\r\n        width: 'inherit',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        flexGrow: '1'\r\n    },\r\n    \r\n});\r\n\r\nfunction GridView({ classes, children}) {\r\n    return (\r\n        <Paper className={classes.gridViewBox}>\r\n            { children }\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(GridView);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport imgDeckCase from '../images/deck_case.png';\r\n\r\nconst styles = theme => ({\r\n    deckViewBox: {\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n    },\r\n    deckContent: {\r\n        fontFamily: 'Meiryo',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        marginTop: '5px'\r\n    },\r\n    deckImage: {\r\n        width: '100%',\r\n        maxWidth: '100px',\r\n        height: 'auto'\r\n    },\r\n    deckDetailLink: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        flexBasis: '100px',\r\n        '&:hover': {\r\n            color: '#2bd5c6',\r\n        }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        deckDetailLink: {\r\n            flexBasis: '105px',\r\n            border: '1px solid white',\r\n            '&:hover': {\r\n                color: '#2bd5c6',\r\n                border: '1px solid #2bd5c6',\r\n                borderRadius: '5px'\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nfunction DeckView({ classes, deck }) {\r\n    return (\r\n        <Link className={classes.deckDetailLink} to={{ pathname: '/deckEditor', \r\n        state: { deckId: deck._id } }}>\r\n            <div className={classes.deckViewBox}>\r\n                <img src={imgDeckCase} className={classes.deckImage} />\r\n                <div className={classes.deckContent}>\r\n                    {deck.name}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(DeckView);","import React, { Component } from 'react';\r\nimport { Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n\r\nclass DeckNameDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            deckName: '',\r\n            codeErrorMsg: \"\",\r\n        };\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({deckName: event.target.value});\r\n    }\r\n\r\n    handleClose = () => {\r\n        //clear form\r\n        this.setState({\r\n            deckName: ''\r\n        });\r\n        this.props.closeDialog();\r\n    }\r\n\r\n    submit = (deckName) => {\r\n        if(deckName.length > 0)\r\n        {\r\n            this.props.handleDeckName(this.state.deckName);\r\n            this.handleClose();\r\n        }\r\n        else\r\n        {\r\n            this.setState({codeErrorMsg: \"Deck name cannot be empty\"});\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { open, title } = this.props;\r\n        const { deckName, codeErrorMsg } = this.state;\r\n\r\n        return(\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={open}\r\n                onExit={() => this.handleClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter deck name\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        label=\"Deck Name\"\r\n                        value={deckName}\r\n                        error={codeErrorMsg !== \"\"}\r\n                        helperText={codeErrorMsg}\r\n                        fullWidth\r\n                        onChange={(event) => this.handleTextChange(event)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.handleClose()}>Cancel</Button>\r\n                    <Button onClick={() => this.submit(deckName)}>Submit</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeckNameDialog;","/*\r\n * action types\r\n */\r\n\r\nexport const START_API_CALL = 'START_API_CALL';\r\nexport const FINISH_API_CALL = 'FINISH_API_CALL';\r\nexport const FINISH_API_ERR = 'FINISH_API_ERR';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function startAPICall()\r\n{\r\n    return {\r\n        type: START_API_CALL\r\n    }\r\n}\r\n\r\nexport function finishAPICall()\r\n{\r\n    return {\r\n        type: FINISH_API_CALL\r\n    }\r\n}\r\n\r\nexport function finishAPIError(errMsg)\r\n{\r\n    return {\r\n        type: FINISH_API_ERR,\r\n        message: errMsg\r\n    }\r\n}","import { API, Auth } from 'aws-amplify';\r\nimport { startAPICall, finishAPICall, finishAPIError } from './uiEventActions'\r\n\r\n/*\r\n * action types\r\n */\r\nexport const GET_PLAYER_DECK_LIST = 'GET_PLAYER_DECK_LIST';\r\nexport const GET_SINGLE_PLAYER_DECK = 'GET_SINGLE_PLAYER_DECK';\r\nexport const RECEIVE_PLAYER_DECK_LIST = 'RECEIVE_PLAYER_DECK_LIST';\r\nexport const RECEIVE_SINGLE_PLAYER_DECK = 'RECEIVE_SINGLE_PLAYER_DECK';\r\nexport const INSERT_PLAYER_DECK = 'INSERT_PLAYER_DECK';\r\nexport const UPDATE_PLAYER_DECK = 'UPDATE_PLAYER_DECK';\r\nexport const INSERT_CARDS_TO_DECK = 'INSERT_CARDS_TO_DECK';\r\nexport const DELETE_PLAYER_DECK = 'DELETE_PLAYER_DECK';\r\nexport const RESET_DECK_LIST = 'RESET_DECK_LIST';\r\n\r\n /*\r\n * action creators\r\n */\r\n\r\nfunction resetDeckList()\r\n{\r\n    return {\r\n        type: RESET_DECK_LIST\r\n    }\r\n}\r\n\r\nexport function getPlayerDecks()\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetDeckList());\r\n        return Auth.currentAuthenticatedUser()\r\n            .then(user => {\r\n                console.log(user);\r\n                return API.get(\"Duel Masters API\", \"playerDecks/user/\"+user.username)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    dispatch(finishAPICall());\r\n                    dispatch(receivePlayerDecks(response));\r\n                })\r\n                .catch(error => {\r\n                    throw error;\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n}\r\n\r\nexport function getPlayerDeck(deckId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetDeckList());\r\n        return API.get(\"Duel Masters API\", \"playerDecks/\" + deckId)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receivePlayerDeck(response));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nfunction receivePlayerDecks(json)\r\n{\r\n    return {\r\n        type: RECEIVE_PLAYER_DECK_LIST,\r\n        decks: json\r\n    }\r\n}\r\n\r\nfunction receivePlayerDeck(json)\r\n{\r\n    return {\r\n        type: RECEIVE_SINGLE_PLAYER_DECK,\r\n        deck: json\r\n    }\r\n}\r\n\r\nexport function createPlayerDeck(deckName)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return Auth.currentAuthenticatedUser()\r\n            .then(user => {\r\n                console.log(user);\r\n                let myInit = {\r\n                    body: {name: deckName, userId: user.username}\r\n                };\r\n                \r\n                return API.post(\"Duel Masters API\", \"playerDecks/\", myInit)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    dispatch(finishAPICall());\r\n                })\r\n                .catch(error => {\r\n                    throw error;\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                finishAPIError(\"Error while inserting deck\");\r\n            });\r\n    };\r\n}\r\n\r\nexport function updatePlayerDecks(deckId, requestBody)\r\n{\r\n    let myInit = {\r\n        body: requestBody\r\n    }\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.put(\"Duel Masters API\", \"playerDecks/\" + deckId, myInit)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                finishAPIError(\"Error while udpating deck\");\r\n            })\r\n        };\r\n}\r\n\r\nexport function insertCardsToDeck(deckId, requestBody)\r\n{\r\n    let myInit = {\r\n        body: requestBody\r\n    }\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.put(\"Duel Masters API\", \"insertCards/\" + deckId, myInit)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                finishAPIError(\"Error while udpating deck\");\r\n            })\r\n        };\r\n}\r\n\r\nexport function deletePlayerDeck(deckId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.del(\"Duel Masters API\", \"playerDecks/\" + deckId)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                finishAPIError(\"Error while deleting deck\");\r\n            })\r\n        };\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { LinearProgress, Fab } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport GridView from '../ui_components/GridView';\r\nimport DeckView from '../dm_components/DeckView';\r\nimport DeckNameDialog from '../dm_components/DeckNameDialog';\r\nimport { getPlayerDecks, createPlayerDeck } from '../redux/actions/dmDeckActions';\r\n\r\nconst styles = theme => ({\r\n  addFab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 2,\r\n    bottom: theme.spacing.unit * 2\r\n  },\r\n  deleteFab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 4 + 56,\r\n    bottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmDeckList: state.dmDeckList,\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPlayerDecks: () => {dispatch(getPlayerDecks())},\r\n    createPlayerDeck: (deckName) => {dispatch(createPlayerDeck(deckName))}\r\n  };\r\n}\r\n\r\nclass DeckManager extends Component \r\n{\r\n  constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n          showDeckNameDialog: false\r\n        };\r\n    }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.props.getPlayerDecks();\r\n  }\r\n\r\n  createDeck = (deckName) => {\r\n    this.props.createPlayerDeck(deckName);\r\n\r\n    //refresh screen\r\n    this.props.getPlayerDecks();\r\n  }\r\n\r\n  closeDeckNameDialog = () => {\r\n    this.setState({showDeckNameDialog: false})\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, dmDeckList, apiCallStatus } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        { apiCallStatus===\"started\" && <LinearProgress /> }\r\n        <GridView>\r\n          { dmDeckList.map((deck) => <DeckView key={deck._id} deck={deck} />) }\r\n        </GridView>\r\n        <Fab color=\"primary\" className={classes.addFab} onClick={() => this.setState({showDeckNameDialog: true})}>\r\n          <Add />\r\n        </Fab>\r\n        <DeckNameDialog open={this.state.showDeckNameDialog} title=\"Create New Deck\" handleDeckName={this.createDeck} closeDialog={this.closeDeckNameDialog}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DeckManager));","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\n\r\nconst styles = theme => ({\r\n    cardViewBox: {\r\n        textAlign: 'center',\r\n        padding: '10px'\r\n    },\r\n    cardContent: {\r\n        fontFamily: 'Meiryo',\r\n        fontWeight: 'bold',\r\n        fontSize: '10px',\r\n        marginTop: '5px'\r\n    },\r\n    cardImage: {\r\n        width: '100%',\r\n        maxWidth: '130px',\r\n        height: 'auto'\r\n    },\r\n    cardDetailLink: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        flexBasis: '85px',\r\n        '&:hover': {\r\n            color: '#2bd5c6',\r\n        }\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        cardDetailLink: {\r\n            flexBasis: '115px'\r\n        }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        cardContent: {\r\n            fontSize: '13px'\r\n        },\r\n        cardDetailLink: {\r\n            flexBasis: '145px',\r\n            border: '1px solid white',\r\n            '&:hover': {\r\n                border: '1px solid #2bd5c6',\r\n                borderRadius: '5px'\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nfunction CardView({ classes, card, handleClick }) {\r\n    return (\r\n        <div className={classnames(classes.cardViewBox, classes.cardDetailLink)} onClick={() => handleClick(card)}>\r\n            <img src={App_Config.dmCardImageLink + card.setId + \"-\" + card.setNumber + \".jpg\"} className={classes.cardImage} />\r\n            <div className={classes.cardContent}>\r\n                {card.setId.toUpperCase()} - {card.setNumber}<br />\r\n                {card.name}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CardView);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Dialog, DialogContent, IconButton, Divider, CircularProgress } from '@material-ui/core';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Close } from '@material-ui/icons';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\n\r\nconst styles = theme => ({\r\n    dialogTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    cardImage: {\r\n        width: '215px'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n      },\r\n    gridContainer: {\r\n        display: 'grid',\r\n        gridGap: '10px',\r\n        marginTop: '10px'\r\n    },\r\n    gridItemImgContainer: {\r\n        textAlign: 'center'\r\n    },\r\n    gridItemDetailContainer: {\r\n        fontFamily: 'Meiryo',\r\n    },\r\n    effectList: {\r\n        listStyleType: 'square'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        gridContainer: {\r\n        gridTemplateColumns: 'auto auto'\r\n      }\r\n    }\r\n});\r\n\r\nfunction CardDetailDialog({ classes, open, card, handleClose, deckAction }) {\r\n    // console.log(card);\r\n    if(card === null) return null;\r\n    \r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <MuiDialogTitle disableTypography className={classes.dialogTitle}>\r\n                <Typography variant=\"h6\">Card Detail</Typography>\r\n                <div className={classes.grow} />\r\n                {deckAction}\r\n                <IconButton onClick={() => handleClose()}>\r\n                    <Close color=\"secondary\" />\r\n                </IconButton>\r\n            </MuiDialogTitle>\r\n            <DialogContent>\r\n                <div className={classes.gridContainer}>\r\n                    <div className={classes.gridItemImgContainer}>\r\n                        <img src={App_Config.dmCardImageLink + card.setId + \"-\" + card.setNumber + \".jpg\"} className={classes.cardImage} />\r\n                    </div>\r\n                    <div className={classes.gridItemDetailContainer}>\r\n                        {card.name} {card.setId.toUpperCase()} {card.setNumber}<br />\r\n                        {card.type} {card.civilizations.map((civil) => civil)} レアリティ {card.rarityCd}<br />\r\n                        コスト {card.cost} マナ {card.mana} パワー {card.power!==undefined && card.power}<br />\r\n                        {card.races !== undefined && (card.races.map((race) => race))}\r\n                        <Divider light />\r\n                        <ul className={classes.effectList}>\r\n                            {card.effects.map((effect, index) => <li key={card.setNumber+index}>{effect}</li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CardDetailDialog);","import React, { Component, Fragment } from 'react';\r\nimport classnames from 'classnames';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\nimport { Grid, IconButton, AppBar, Toolbar, LinearProgress, Fab } from '@material-ui/core';\r\nimport { Edit, Sort, FilterList, Delete, Save, DeleteSweep } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport CardView from '../dm_components/CardView';\r\nimport GridView from '../ui_components/GridView';\r\nimport { getPlayerDeck, updatePlayerDecks, deletePlayerDeck } from '../redux/actions/dmDeckActions';\r\nimport CardDetailDialog from '../dm_components/CardDetailDialog';\r\nimport DeckNameDialog from '../dm_components/DeckNameDialog';\r\nimport ConfirmDialog from '../dm_components/ConfirmDialog'\r\n\r\n\r\nconst styles = theme => ({\r\n    flexColumnBox: {\r\n      display: 'flex',\r\n      flexFlow: 'column',\r\n      height: '100%'\r\n    },\r\n    gridWrapper: {\r\n      height: '100%'\r\n    },\r\n    firstColumn: {\r\n      display: 'flex',\r\n      flexFlow: 'column'\r\n    },\r\n    secondColumn: {\r\n      display: 'grid'\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    gridTitle: {\r\n      fontWeight: 'bold'\r\n    },\r\n    saveFab: {\r\n      position: 'fixed',\r\n      right: theme.spacing.unit * 2,\r\n      bottom: theme.spacing.unit * 2\r\n    },\r\n    deleteFab: {\r\n        position: 'fixed',\r\n        right: theme.spacing.unit * 4 + 56,\r\n        bottom: theme.spacing.unit * 2\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      firstColumn: {\r\n        gridTemplateRows: 'auto'\r\n      },\r\n      secondColumn: {\r\n        gridTemplateRows: 'auto'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmDeck: state.dmDeckList[0],\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPlayerDeck: (deckId) => {dispatch(getPlayerDeck(deckId))},\r\n    updatePlayerDecks: (deckObject) => {dispatch(updatePlayerDecks(deckObject._id, deckObject))},\r\n    deletePlayerDeck: (deckId) => {dispatch(deletePlayerDeck(deckId))}\r\n  };\r\n}\r\n\r\nclass DeckEditor extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state = {\r\n        card: null,\r\n        cachedDeck: null,\r\n        showCardDetailDialog : false,\r\n        showDeckNameDialog: false,\r\n        showConfirmDialog: false\r\n      };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    const { location, getPlayerDeck } = this.props;\r\n    getPlayerDeck(location.state.deckId);\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    const { cachedDeck } = this.state;\r\n    const { dmDeck } = this.props;\r\n    console.log(dmDeck);\r\n    if(cachedDeck === null && dmDeck !== undefined)\r\n    {\r\n      this.setState({ cachedDeck: dmDeck });\r\n    }\r\n  }\r\n\r\n  editDeckName = (deckName) => {\r\n    const { cachedDeck } = this.state;\r\n    let newDeck = { ...cachedDeck };\r\n    newDeck.name = deckName;\r\n    this.setState({ cachedDeck: newDeck });\r\n  }\r\n\r\n  removeCardFromDeck = (removingCard) => {\r\n    const { cachedDeck } = this.state;\r\n    let newDeck = { ...cachedDeck };\r\n    newDeck.cards = cachedDeck.cards.filter(card => card !== removingCard);\r\n    this.setState({ cachedDeck: newDeck });\r\n    this.handleDialogClose();\r\n  }\r\n\r\n  handleDialogOpen = (card) => {\r\n    this.setState({ showCardDetailDialog: true, card: card });\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ showCardDetailDialog: false, card: null });\r\n  }\r\n\r\n  closeCreateDeckDialog = () => {\r\n    this.setState({showDeckNameDialog: false})\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, apiCallStatus, dmDeck, updatePlayerDecks, deletePlayerDeck } = this.props;\r\n    const { card, cachedDeck, showDeckNameDialog, showCardDetailDialog, showConfirmDialog } = this.state;\r\n\r\n    if(cachedDeck===null) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" className={classes.gridTitle}>{cachedDeck.name}</Typography>\r\n            <IconButton onClick={() => this.setState({showDeckNameDialog: true})}>\r\n                <Edit color=\"secondary\"/>\r\n            </IconButton>\r\n            <div className={classes.grow} />\r\n            <IconButton>\r\n                <FilterList color=\"secondary\"/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <Sort color=\"secondary\"/>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        { apiCallStatus===\"started\" && <LinearProgress /> }\r\n        <GridView>\r\n          { cachedDeck.cards.map((card, index) => <CardView key={card._id+index} card={card} handleClick={this.handleDialogOpen}/>)  } \r\n        </GridView>\r\n        <Fab color=\"primary\" className={classes.deleteFab} onClick={() => this.setState({showConfirmDialog: true})}>\r\n          <Delete />\r\n        </Fab>\r\n        <Fab color=\"primary\" className={classes.saveFab} onClick={() => {updatePlayerDecks(cachedDeck);this.props.history.push('/deckManager');}}>\r\n          <Save />\r\n        </Fab>\r\n        <CardDetailDialog open={showCardDetailDialog} card={card} handleClose={this.handleDialogClose}\r\n          deckAction= {\r\n            <IconButton onClick={() => this.removeCardFromDeck(card)}>\r\n                <DeleteSweep color=\"secondary\" />\r\n            </IconButton>\r\n          }/>\r\n        <DeckNameDialog open={showDeckNameDialog} title=\"Edit Deck Name\" handleDeckName={this.editDeckName} closeDialog={this.closeCreateDeckDialog}/>\r\n        <ConfirmDialog open={showConfirmDialog}\r\n          dialogTitle=\"Delete Deck\"\r\n          dialogMessage=\"Are you sure you want to delete this deck?\"\r\n          closeDialog={() => this.setState({showConfirmDialog: false})}\r\n          submitButtonText=\"Delete\"\r\n          submitAction={() => {deletePlayerDeck(cachedDeck._id);this.props.history.push('/deckManager');}}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(DeckEditor)));","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\n\r\nconst styles = theme => ({\r\n    productViewBox: {\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n    },\r\n    productContent: {\r\n        fontFamily: 'Meiryo',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        marginTop: '5px'\r\n    },\r\n    productImage: {\r\n        width: '100%',\r\n        maxWidth: '150px',\r\n        height: 'auto'\r\n    },\r\n    cardGalleryLink: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        flexBasis: '150px',\r\n        '&:hover': {\r\n            color: '#2bd5c6',\r\n        }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        cardGalleryLink: {\r\n            flexBasis: '155px',\r\n            border: '1px solid white',\r\n            '&:hover': {\r\n                color: '#2bd5c6',\r\n                border: '1px solid #2bd5c6',\r\n                borderRadius: '5px'\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nfunction ProductView({ classes, product, productType }) {\r\n    console.log(product);\r\n    console.log(productType);\r\n    return (\r\n        <Link className={classes.cardGalleryLink} to={{ pathname: '/cardGallery', \r\n        state: { \r\n            action: (productType === \"startDeck\")? \"getPlayerDeck\": \"getCardsBySetId\", \r\n            title: parseSetId(product.setId) + \" \" + (product.seriesName !== undefined?product.seriesName + \" \":\"\") + (product.seriesNumber !== undefined?product.seriesNumber + \" \":\"\") + product.name, \r\n            primaryId: (productType === \"startDeck\")? product._id: product.setId} }}>\r\n            <div className={classes.productViewBox}>\r\n                <img src={App_Config.cloudfrontImageLink + \"products/\" + product.setId + \".jpg\"} className={classes.productImage} />\r\n                <div className={classes.productContent}>\r\n                    {parseSetId(product.setId)}<br />\r\n                    {(product.seriesName !== undefined && product.seriesNumber !== undefined)? <div>{product.seriesName}  {product.seriesNumber}</div>: null}\r\n                    {product.name}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nfunction parseSetId(setId)\r\n{\r\n    var setCode = setId.split(/[0-9]/)[0];\r\n    var setNumber = setId.split(/^[a-zA-Z]+/)[1];\r\n    return setCode.toLocaleUpperCase() + \"-\" + setNumber;\r\n}\r\n\r\nexport default withStyles(styles)(ProductView);","import { API } from 'aws-amplify';\r\nimport { startAPICall, finishAPICall } from './uiEventActions'\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const FILTER_BOOSTER_PACK_LIST = 'FILTER_BOOSTER_PACK_LIST';\r\nexport const FILTER_STARTER_DECK_LIST = 'FILTER_STARTER_DECK_LIST';\r\nexport const FILTER_PROMO_CARD_LIST = 'FILTER_PROMO_CARD_LIST';\r\nexport const GET_BOOSTER_PACK_LIST = 'GET_BOOSTER_PACK_LIST';\r\nexport const GET_STARTER_DECK_LIST = 'GET_STARTER_DECK_LIST';\r\nexport const GET_PROMO_CARD_LIST = 'GET_PROMO_CARD_LIST';\r\nexport const RECEIVE_BOOSTER_PACK_LIST = 'RECEIVE_BOOSTER_PACK_LIST';\r\nexport const RECEIVE_STARTER_DECK_LIST = 'RECEIVE_STARTER_DECK_LIST';\r\nexport const RECEIVE_PROMO_CARD_LIST = 'RECEIVE_PROMO_CARD_LIST';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function getBoosterPack()\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.get(\"Duel Masters API\", \"boosterPacks/\")\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveBoosterPack(response));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nfunction receiveBoosterPack(json)\r\n{\r\n    return {\r\n        type: RECEIVE_BOOSTER_PACK_LIST,\r\n        boosterPacks: json\r\n    }\r\n}\r\n\r\nexport function filterBoosterPack(filter_text)\r\n{\r\n    return {type: FILTER_BOOSTER_PACK_LIST, filterText: filter_text};\r\n}\r\n\r\nexport function getStarterDeck()\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.get(\"Duel Masters API\", \"starterDecks/\")\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveStarterDeck(response));\r\n            })\r\n        };\r\n}\r\n\r\nfunction receiveStarterDeck(json)\r\n{\r\n    return {\r\n        type: RECEIVE_STARTER_DECK_LIST,\r\n        starterDecks: json\r\n    }\r\n}\r\n\r\nexport function filterStarterDeck(filter_text)\r\n{\r\n    return {type: FILTER_STARTER_DECK_LIST, filterText: filter_text};\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Grid, Toolbar, Button, LinearProgress, Fab } from '@material-ui/core';\r\nimport { Search, ArrowUpward } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport GridView from '../ui_components/GridView';\r\nimport ProductView from '../dm_components/ProductView';\r\nimport { getBoosterPack, getStarterDeck } from '../redux/actions/dmProductActions'\r\n\r\nconst styles = theme => ({\r\n  appBarButtonWrapper: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto auto auto'\r\n  },\r\n  searchfab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 2,\r\n    bottom: theme.spacing.unit * 2\r\n  },\r\n  topFab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 4 + 56,\r\n    bottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmProductList: state.dmProductList,\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBoosterPack: () => {dispatch(getBoosterPack())},\r\n    getStarterDeck: () => {dispatch(getStarterDeck())},\r\n  };\r\n}\r\n\r\nclass ProductGallery extends Component \r\n{\r\n  constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            productType: \"\"\r\n        };\r\n    }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.getDmProduct(\"boosterPack\");\r\n  }\r\n\r\n  getDmProduct = productType => {\r\n    const { getBoosterPack, getStarterDeck } = this.props;\r\n    this.setState({productType: productType});\r\n    switch(productType)\r\n    {\r\n      case \"boosterPack\":\r\n        getBoosterPack();\r\n        break;\r\n      case \"startDeck\":\r\n        getStarterDeck();\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, dmProductList, apiCallStatus } = this.props;\r\n    let fakeList = \r\n    [\r\n      {\r\n          \"_id\": \"1\",\r\n          \"setId\": \"dm01\",\r\n          \"name\": \"デュエル・マスターズ\",\r\n          \"seriesName\": \"基本編\",\r\n          \"seriesNumber\": \"第1弾\",\r\n          \"price\": 150\r\n      },\r\n      {\r\n          \"_id\": \"2\",\r\n          \"setId\": \"dm01\",\r\n          \"name\": \"デュエル・マスターズ\",\r\n          \"seriesName\": \"基本編\",\r\n          \"seriesNumber\": \"第1弾\",\r\n          \"price\": 150\r\n      },\r\n      {\r\n          \"_id\": \"3\",\r\n          \"setId\": \"dm01\",\r\n          \"name\": \"デュエル・マスターズ\",\r\n          \"seriesName\": \"基本編\",\r\n          \"seriesNumber\": \"第1弾\",\r\n          \"price\": 150\r\n      },\r\n      {\r\n          \"_id\": \"4\",\r\n          \"setId\": \"dm01\",\r\n          \"name\": \"デュエル・マスターズ\",\r\n          \"seriesName\": \"基本編\",\r\n          \"seriesNumber\": \"第1弾\",\r\n          \"price\": 150\r\n      },\r\n      {\r\n          \"_id\": \"5\",\r\n          \"setId\": \"dm01\",\r\n          \"name\": \"デュエル・マスターズ\",\r\n          \"seriesName\": \"基本編\",\r\n          \"seriesNumber\": \"第1弾\",\r\n          \"price\": 150\r\n      },\r\n      {\r\n          \"_id\": \"6\",\r\n          \"setId\": \"dm01\",\r\n          \"name\": \"デュエル・マスターズ\",\r\n          \"seriesName\": \"基本編\",\r\n          \"seriesNumber\": \"第1弾\",\r\n          \"price\": 150\r\n      },\r\n      {\r\n        \"_id\": \"7\",\r\n        \"setId\": \"dm01\",\r\n        \"name\": \"デュエル・マスターズ\",\r\n        \"seriesName\": \"基本編\",\r\n        \"seriesNumber\": \"第1弾\",\r\n        \"price\": 150\r\n    },\r\n    {\r\n        \"_id\": \"8\",\r\n        \"setId\": \"dm01\",\r\n        \"name\": \"デュエル・マスターズ\",\r\n        \"seriesName\": \"基本編\",\r\n        \"seriesNumber\": \"第1弾\",\r\n        \"price\": 150\r\n    },\r\n    {\r\n        \"_id\": \"9\",\r\n        \"setId\": \"dm01\",\r\n        \"name\": \"デュエル・マスターズ\",\r\n        \"seriesName\": \"基本編\",\r\n        \"seriesNumber\": \"第1弾\",\r\n        \"price\": 150\r\n    },\r\n    {\r\n        \"_id\": \"10\",\r\n        \"setId\": \"dm01\",\r\n        \"name\": \"デュエル・マスターズ\",\r\n        \"seriesName\": \"基本編\",\r\n        \"seriesNumber\": \"第1弾\",\r\n        \"price\": 150\r\n    },\r\n    {\r\n        \"_id\": \"11\",\r\n        \"setId\": \"dm01\",\r\n        \"name\": \"デュエル・マスターズ\",\r\n        \"seriesName\": \"基本編\",\r\n        \"seriesNumber\": \"第1弾\",\r\n        \"price\": 150\r\n    },\r\n    {\r\n        \"_id\": \"12\",\r\n        \"setId\": \"dm01\",\r\n        \"name\": \"デュエル・マスターズ\",\r\n        \"seriesName\": \"基本編\",\r\n        \"seriesNumber\": \"第1弾\",\r\n        \"price\": 150\r\n    }\r\n    ]\r\n\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\" color=\"default\">\r\n            <Toolbar>\r\n              <Grid container justify=\"space-between\" spacing={8}>\r\n                <Grid item xs={12} sm={5} className={classes.appBarButtonWrapper}>\r\n                  <Button onClick={() => this.getDmProduct(\"boosterPack\")}>Booster Packs</Button>\r\n                  <Button onClick={() => this.getDmProduct(\"startDeck\")}>Start Decks</Button>\r\n                  <Button>Promo Cards</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          { apiCallStatus===\"started\" && <LinearProgress /> }\r\n          <GridView>\r\n              { dmProductList.map((product) => <ProductView key={product._id} product={product} productType={this.state.productType}/>) }\r\n          </GridView>\r\n          <Fab color=\"primary\" className={classes.topFab}>\r\n            <ArrowUpward />\r\n          </Fab>\r\n          <Fab color=\"primary\" className={classes.searchfab}>\r\n            <Search />\r\n          </Fab>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProductGallery));","import { API } from 'aws-amplify';\r\nimport { startAPICall, finishAPICall } from './uiEventActions'\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const GET_CARDS_BY_SET_ID = 'GET_CARDS_BY_SET_ID';\r\nexport const GET_CARDS_BY_DECK_ID = 'GET_CARDS_BY_DECK_ID';\r\nexport const RECEIVE_CARDS = 'RECEIVE_CARDS';\r\nexport const RESET_CARD_LIST = 'RESET_CARD_LIST';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nfunction resetCardList()\r\n{\r\n    return {\r\n        type: RESET_CARD_LIST\r\n    }\r\n}\r\n\r\nexport function getCardsBySetId(setId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetCardList());\r\n        return API.get(\"Duel Masters API\", \"cards/\" + setId)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveCards(response));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nexport function getCardsByDeckId(deckId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetCardList());\r\n        return API.get(\"Duel Masters API\", \"playerDecks/\" + deckId)\r\n            .then(response => {\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveCards(response[0].cards));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nfunction receiveCards(json)\r\n{\r\n    return {\r\n        type: RECEIVE_CARDS,\r\n        cards: json\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Grid, Button, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Close } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\nimport { getPlayerDecks, insertCardsToDeck } from '../redux/actions/dmDeckActions';\r\n\r\nconst styles = theme => ({\r\n    dialogTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    cardImage: {\r\n        width: '215px'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n      },\r\n    gridContainer: {\r\n        display: 'grid',\r\n        gridGap: '10px',\r\n        marginTop: '10px'\r\n    },\r\n    gridItemImgContainer: {\r\n        textAlign: 'center'\r\n    },\r\n    gridItemDetailContainer: {\r\n        fontFamily: 'Meiryo',\r\n    },\r\n    effectList: {\r\n        listStyleType: 'square'\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        gridContainer: {\r\n        gridTemplateColumns: 'auto auto'\r\n      },\r\n      gridItemDetailContainer: {\r\n          width: '200px'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dmDeckList: state.dmDeckList,\r\n        apiCallStatus: state.uiEvents.apiCallStatus\r\n    };\r\n}\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPlayerDecks: () => {dispatch(getPlayerDecks())},\r\n        insertCardsToDeck: (deckId, requestBody) => {dispatch(insertCardsToDeck(deckId, requestBody))}\r\n    };\r\n}\r\n\r\nclass InsertCardDialog extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            deckId: '',\r\n            quantity: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.getPlayerDecks();\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        const { handleClose } = this.props;\r\n        this.setState({ deckId: '', quantity: 0 });\r\n        handleClose();\r\n    }\r\n\r\n    submit = (setId, setNumber) => {\r\n        const { insertCardsToDeck } = this.props;\r\n        const { deckId, quantity } = this.state;\r\n        console.log(\"Deck ID: \" + deckId);\r\n        console.log(\"set ID: \" + setId);\r\n        console.log(\"set Number: \" + setNumber);\r\n        console.log(\"Quantity: \" + quantity);\r\n        insertCardsToDeck(deckId, {setId: setId, setNumber: setNumber, quantity: quantity});\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { classes, open, card, handleClose, dmDeckList, apiCallStatus } = this.props;\r\n\r\n        if(card === null) return null;\r\n\r\n        return (\r\n            <Dialog \r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={open}\r\n                onExit={() => this.handleDialogClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Insert Card to Deck</DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.gridContainer}>\r\n                        <div className={classes.gridItemImgContainer}>\r\n                            <img src={App_Config.dmCardImageLink + card.setId + \"-\" + card.setNumber + \".jpg\"} className={classes.cardImage} />\r\n                        </div>\r\n                        <div className={classes.gridItemDetailContainer}>\r\n                            <Grid container spacing={8}>\r\n                                <Grid item xs={8} sm={12}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel htmlFor=\"deckId-dropdown\">Deck</InputLabel>\r\n                                        <Select\r\n                                            value={this.state.deckId}\r\n                                            onChange={this.handleChange}\r\n                                            inputProps={{\r\n                                                name: 'deckId',\r\n                                                id: 'deckId-dropdown'\r\n                                            }}>\r\n                                            { dmDeckList.map((deck) => <MenuItem key={deck._id} value={deck._id}>{deck.name}</MenuItem>) }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={12}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel htmlFor=\"quantity-dropdown\">Quantity</InputLabel>\r\n                                        <Select\r\n                                            value={this.state.quantity}\r\n                                            onChange={this.handleChange}\r\n                                            inputProps={{\r\n                                                name: 'quantity',\r\n                                                id: 'quantity-dropdown'\r\n                                            }}>\r\n                                            <MenuItem value={1}>1</MenuItem>\r\n                                            <MenuItem value={2}>2</MenuItem>\r\n                                            <MenuItem value={3}>3</MenuItem>\r\n                                            <MenuItem value={4}>4</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => handleClose()}>Cancel</Button>\r\n                    <Button onClick={() => { this.submit(card.setId, card.setNumber); this.handleDialogClose();}}>Insert</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(InsertCardDialog));","import React, { Component, Fragment } from 'react';\r\nimport classnames from 'classnames';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\nimport { Grid, IconButton, AppBar, Toolbar, LinearProgress, Fab } from '@material-ui/core';\r\nimport { Sort, FilterList, ArrowUpward, Archive } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport CardView from '../dm_components/CardView';\r\nimport GridView from '../ui_components/GridView';\r\nimport { getCardsBySetId, getCardsByDeckId } from '../redux/actions/dmCardActions';\r\nimport { insertCardsToDeck } from '../redux/actions/dmDeckActions';\r\nimport CardDetailDialog from '../dm_components/CardDetailDialog';\r\nimport InsertCardDialog from '../dm_components/InsertCardDialog';\r\n\r\n\r\nconst styles = theme => ({\r\n    flexColumnBox: {\r\n      display: 'flex',\r\n      flexFlow: 'column',\r\n      height: '100%'\r\n    },\r\n    gridWrapper: {\r\n      height: '100%'\r\n    },\r\n    firstColumn: {\r\n      display: 'flex',\r\n      flexFlow: 'column'\r\n    },\r\n    secondColumn: {\r\n      display: 'grid'\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    gridTitle: {\r\n      fontWeight: 'bold'\r\n    },\r\n    topFab: {\r\n      position: 'fixed',\r\n      right: theme.spacing.unit * 2,\r\n      bottom: theme.spacing.unit * 2\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      firstColumn: {\r\n        gridTemplateRows: 'auto'\r\n      },\r\n      secondColumn: {\r\n        gridTemplateRows: 'auto'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmCardList: state.dmCardList,\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCardsBySetId: (setId) => {dispatch(getCardsBySetId(setId))},\r\n    getCardsByDeckId: (deckId) => {dispatch(getCardsByDeckId(deckId))}\r\n  };\r\n}\r\n\r\nclass CardGallery extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state = {\r\n        card: null,\r\n        showCardDetailDialog : false,\r\n        showInsertCardDialog : false\r\n      };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    const { location } = this.props;\r\n    switch(location.state.action)\r\n    {\r\n      case \"getCardsBySetId\":\r\n        this.props.getCardsBySetId(location.state.primaryId);\r\n        break;\r\n      case \"getPlayerDeck\":\r\n        this.props.getCardsByDeckId(location.state.primaryId);\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleDialogOpen = (card) => {\r\n    this.setState({ showCardDetailDialog: true, card: card });\r\n  }\r\n\r\n  handleCardDetailDialogClose = () => {\r\n    this.setState({ showCardDetailDialog: false, card: null });\r\n  }\r\n\r\n  handleInsertCardDialogClose = () => {\r\n    this.setState({ showInsertCardDialog: false, card: null });\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, location, apiCallStatus, dmCardList } = this.props;\r\n    const { showCardDetailDialog, showInsertCardDialog, card } = this.state;\r\n    let fakeList = [\r\n        {\r\n            \"_id\": \"5bccf26c1c9d440000668ad7\",\r\n            \"setId\": \"dm01\",\r\n            \"setNumber\": \"043\",\r\n            \"name\": \"大気の使徒フレイ\",\r\n            \"rarityCd\": \"U\"\r\n        }\r\n    ];\r\n\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" className={classnames(classes.grow, classes.gridTitle)}>{location.state.title}</Typography>\r\n            <IconButton>\r\n                <FilterList color=\"secondary\"/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <Sort color=\"secondary\"/>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        { apiCallStatus===\"started\" && <LinearProgress /> }\r\n        <GridView>\r\n          { dmCardList.map((card) => <CardView key={card._id} card={card} handleClick={this.handleDialogOpen}/>) } \r\n        </GridView>\r\n        <Fab color=\"primary\" className={classes.topFab} onClick={() => window.scrollTo(0,0)}>\r\n          <ArrowUpward />\r\n        </Fab>\r\n        <CardDetailDialog open={showCardDetailDialog} card={card} handleClose={this.handleCardDetailDialogClose}\r\n          deckAction= {\r\n            <IconButton onClick={() => this.setState({ showInsertCardDialog: true, showCardDetailDialog: false })}>\r\n                <Archive color=\"secondary\" />\r\n            </IconButton>\r\n          }/>\r\n          <InsertCardDialog open={showInsertCardDialog} card={card} handleClose={this.handleInsertCardDialogClose}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(CardGallery)));","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport DmAuthenticator from '../authentication/DmAuthenticator';\nimport PrivateRoute from './PrivateRoute';\nimport DeckManager from '../pages/DeckManager';\nimport DeckEditor from '../pages/DeckEditor';\nimport ProductGallery from '../pages/ProductGallery';\nimport CardGallery from '../pages/CardGallery';\n\nfunction DmRouter()\n{\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/auth' component={DmAuthenticator} />\n        <PrivateRoute exact path='/' component={DeckManager} titleId=\"titleDeckManager\"/>\n        <PrivateRoute path='/deckManager' component={DeckManager} titleId=\"titleDeckManager\"/>\n        <PrivateRoute path='/deckEditor' component={DeckEditor} titleId=\"titleDeckEditor\"/>\n        <PrivateRoute path='/productGallery' component={ProductGallery} titleId=\"titleProductGallery\"/>\n        <PrivateRoute path='/cardGallery' component={CardGallery} titleId=\"titleCardGallery\"/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default DmRouter;\n","import React, { Component } from 'react';\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport en from 'react-intl/locale-data/en';\r\nimport ja from 'react-intl/locale-data/ja';\r\nimport zh from 'react-intl/locale-data/zh';\r\n\r\nimport intlMessagesEN from './en.json';\r\nimport intlMessagesZH from './zh.json';\r\nimport intlMessagesJA from './ja.json';\r\n\r\nclass DmIntlProvider extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        addLocaleData([...en,...zh,...ja]);\r\n        this.state = {\r\n            locale: 'en',\r\n            messages: intlMessagesEN \r\n        };\r\n    }\r\n\r\n    changeLanguage = (langCode) => {\r\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"lang\", langCode);\r\n        switch(langCode)\r\n        {\r\n            case \"en\":\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesEN\r\n                });\r\n                break;\r\n            case \"zh\":\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesZH\r\n                });\r\n                break;\r\n            case \"ja\":\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesJA\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesEN\r\n                });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <IntlProvider locale={ this.state.locale } messages={this.state.messages}>\r\n                {React.cloneElement(this.props.children, { changeLanguage: this.changeLanguage })}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DmIntlProvider;","import { INSERT_PUBLIC_SHARE_DECK_LIST } from '../actions/dashboardActions'\r\n\r\nconst publicSharedDeckReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case INSERT_PUBLIC_SHARE_DECK_LIST:\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default publicSharedDeckReducer;","/*\r\n * action types\r\n */\r\n\r\n\r\nexport const INSERT_PUBLIC_SHARE_DECK_LIST = 'INSERT_PUBLIC_SHARE_DECK_LIST';\r\nexport const INSERT_PRIVATE_SHARE_DECK_LIST = 'INSERT_PRIVATE_SHARE_DECK_LIST';\r\nexport const INSERT_RECOMMEND_DECK_LIST = 'INSERT_RECOMMEND_DECK_LIST';\r\n\r\n/*\r\n * action creators\r\n */","import { INSERT_PRIVATE_SHARE_DECK_LIST } from '../actions/dashboardActions'\r\n\r\nconst privateSharedDeckReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case INSERT_PRIVATE_SHARE_DECK_LIST:\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default privateSharedDeckReducer;","import { INSERT_RECOMMEND_DECK_LIST } from '../actions/dashboardActions'\r\n\r\nconst recommendDeckReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case INSERT_RECOMMEND_DECK_LIST:\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default recommendDeckReducer;","import { RECEIVE_BOOSTER_PACK_LIST, RECEIVE_STARTER_DECK_LIST } from '../actions/dmProductActions'\r\n\r\nconst dmProductReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case RECEIVE_BOOSTER_PACK_LIST:\r\n            return action.boosterPacks;\r\n        case RECEIVE_STARTER_DECK_LIST:\r\n            return action.starterDecks;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dmProductReducer;","import { START_API_CALL, FINISH_API_CALL, FINISH_API_ERR } from '../actions/uiEventActions'\r\n\r\nconst uiEventReducer = (state = {}, action) => {\r\n    switch (action.type)\r\n    {\r\n        case START_API_CALL:\r\n            return {...state, apiCallStatus: \"started\"};\r\n        case FINISH_API_CALL:\r\n            return {...state, apiCallStatus: \"finished\"};\r\n        case FINISH_API_ERR:\r\n            return {...state, apiCallStatus: \"error\", deckAPIErrMsg: action.message};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default uiEventReducer;","import { combineReducers } from 'redux';\r\nimport publicSharedDeckReducer from './publicSharedDeckReducer';\r\nimport privateSharedDeckReducer from './privateSharedDeckReducer';\r\nimport recommendDeckReducer from './recommendDeckReducer';\r\nimport dmProductReducer from './dmProductReducer';\r\nimport uiEventReducer from './uiEventReducer';\r\nimport { dmCardReducer } from './dmCardReducer';\r\nimport { dmDeckReducer } from './dmDeckReducer';\r\n\r\nconst appReducer = combineReducers({\r\n    publicSharedDecks: publicSharedDeckReducer,\r\n    privateSharedDecks: privateSharedDeckReducer,\r\n    recommendDecks: recommendDeckReducer,\r\n    dmProductList: dmProductReducer,\r\n    dmCardList: dmCardReducer,\r\n    dmDeckList: dmDeckReducer,\r\n    uiEvents: uiEventReducer\r\n});\r\n\r\nexport default appReducer; ","import { RECEIVE_CARDS, RESET_CARD_LIST } from '../actions/dmCardActions'\r\n\r\nexport const dmCardReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case RECEIVE_CARDS:\r\n            return action.cards;\r\n        case RESET_CARD_LIST:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","import { RECEIVE_PLAYER_DECK_LIST, RECEIVE_SINGLE_PLAYER_DECK, RESET_DECK_LIST } from '../actions/dmDeckActions'\r\n\r\nexport const dmDeckReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case RECEIVE_PLAYER_DECK_LIST:\r\n            return action.decks;\r\n        case RECEIVE_SINGLE_PLAYER_DECK:\r\n            return action.deck;\r\n        case RESET_DECK_LIST:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport DmRouter from './router/DmRouter';\nimport DmIntlProvider from './languages/DmIntlProvider';\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './redux/reducers/appReducer';\nimport * as serviceWorker from './serviceWorker';\nimport DMTheme from './theme.json';\n\nconst theme = createMuiTheme(DMTheme);\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <DmIntlProvider>\n                <DmRouter />\n            </DmIntlProvider>\n        </Provider>\n    </MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}