{"version":3,"sources":["images/dm_logo.png","ui_components/AuthFrame.js","authentication/SignIn.js","authentication/SignUp.js","authentication/ForgetPassword.js","authentication/DmAuthenticator.js","languages/DmIntlProvider.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","backgroundColor","padding","props","classes","children","react_default","a","createElement","Paper_default","elevation","SignIn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","showPassword","handleClickShowPassword","bind","assertThisInitialized","event","setState","defineProperty","target","id","value","_this2","core_index_es","container","direction","spacing","item","Typography_default","variant","color","index_es","alignItems","xs","icons_index_es","label","fullWidth","onChange","handleTextChange","htmlFor","type","endAdornment","position","aria-label","onClick","awsSignIn","justify","changeState","changeLanguage","Component","SignUp","email","console","log","awsSignUp","ForgetPassword","awsForgetPassword","DmAuthenticator","authState","childError","signIn","signUp","forgetPassword","targetAuthState","className","Grid_default","xl","src","dmLogo","alt","ui_components_AuthFrame","authObject","authentication_SignIn","authentication_SignUp","authentication_ForgetPassword","DmIntlProvider","addLocaleData","toConsumableArray","en","concat","zh","ja","locale","messages","intlMessagesEN","langCode","document","getElementsByTagName","setAttribute","intlMessagesZH","intlMessagesJA","React","cloneElement","Boolean","window","location","hostname","match","theme","createMuiTheme","DMTheme","ReactDOM","render","styles","languages_DmIntlProvider","authentication_DmAuthenticator","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff0b6cf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dm_logo.605740b1.png\";","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n        padding: '30px'\r\n    }\r\n};\r\n\r\nfunction AuthFrame(props) {\r\n    const { classes, children } = props;\r\n\r\n    return (\r\n        <Paper classes={{root: classes.root}} elevation={1}>\r\n          { children }\r\n        </Paper>\r\n      );\r\n}\r\nexport default withStyles(styles)(AuthFrame);","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Grid, Input, InputLabel, InputAdornment, IconButton, FormControl, Button } from '@material-ui/core';\r\nimport { AccountCircle, Lock, Visibility, VisibilityOff  } from '@material-ui/icons';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            showPassword: false\r\n        };\r\n\r\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword() \r\n    {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form>\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleSignIn\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"username\" label={<FormattedMessage id=\"txtUsername\"/>}\r\n                                fullWidth={true} \r\n                                value={this.state.username} \r\n                                onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Lock />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <FormControl fullWidth={true}>\r\n                                    <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                    <Input \r\n                                        id=\"password\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onChange={(event) => this.handleTextChange(event)}\r\n                                        endAdornment=\r\n                                        {\r\n                                            <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"Toggle password visibility\"\r\n                                                onClick={this.handleClickShowPassword}>\r\n                                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={() => this.props.awsSignIn(this.state.username, this.state.password)} ><FormattedMessage id=\"btnSignIn\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"forgetPassword\")}><FormattedMessage id=\"btnForgetPassword\"/></Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signUp\")}><FormattedMessage id=\"btnCreateAccount\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeLanguage(\"en\")}>EN</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeLanguage(\"zh\")}>ZH</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeLanguage(\"ja\")}>JA</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Grid, Input, InputLabel, InputAdornment, IconButton, FormControl, Button } from '@material-ui/core';\r\nimport { Email, AccountCircle, Lock, Visibility, VisibilityOff  } from '@material-ui/icons';\r\n\r\nclass SignUp extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            showPassword: false\r\n        };\r\n\r\n        this.handleClickShowPassword = this.handleClickShowPassword.bind(this);\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword() \r\n    {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n        console.log(this.state.showPassword);\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form>\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleSignUp\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Email />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\" label={<FormattedMessage id=\"txtEmail\"/>} \r\n                                fullWidth={true} \r\n                                value={this.state.email} \r\n                                onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"username\" label={<FormattedMessage id=\"txtUsername\"/>} \r\n                                fullWidth={true} \r\n                                value={this.state.username} \r\n                                onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Lock />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <FormControl fullWidth={true}>\r\n                                    <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                    <Input \r\n                                        id=\"password\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onChange={(event) => this.handleTextChange(event)}\r\n                                        endAdornment=\r\n                                        {\r\n                                            <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"Toggle password visibility\"\r\n                                                onClick={this.handleClickShowPassword}>\r\n                                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth={true} \r\n                                    onClick={() => this.props.awsSignUp(this.state.email, this.state.username, this.state.password)} ><FormattedMessage id=\"titleSignUp\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signIn\")}><FormattedMessage id=\"btnSignInInstead\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { AccountCircle  } from '@material-ui/icons';\r\n\r\nclass ForgetPassword extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            username: ''\r\n        };\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form>\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleForgetPassword\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle />\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"username\" label={<FormattedMessage id=\"txtUsername\"/>} \r\n                                fullWidth={true} \r\n                                value={this.state.username} \r\n                                onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={() => this.props.awsForgetPassword(this.state.username)}><FormattedMessage id=\"btnGetNewPassword\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signIn\")}><FormattedMessage id=\"btnSignInInstead\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgetPassword;","import React, { Component } from 'react';\r\nimport dmLogo from '../images/dm_logo.png';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Auth } from 'aws-amplify';\r\nimport AuthFrame from '../ui_components/AuthFrame';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport ForgetPassword from './ForgetPassword';\r\n\r\nclass DmAuthenticator extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            authState: 'signIn',\r\n            childError: false\r\n        };\r\n\r\n        this.changeState = this.changeState.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.signUp = this.signUp.bind(this);\r\n        this.forgetPassword = this.forgetPassword.bind(this);\r\n    }\r\n\r\n    signIn(username, password)\r\n    {\r\n        console.log(username, \" : \", password);\r\n    }\r\n\r\n    signUp(email, username, password)\r\n    {\r\n        console.log(email, \" : \", username, \" : \", password);\r\n    }\r\n\r\n    forgetPassword(username)\r\n    {\r\n        console.log(username);\r\n    }\r\n\r\n    changeState(targetAuthState)\r\n    {\r\n        this.setState({authState: targetAuthState});\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"DmAuthenticator\">\r\n                <Grid container className=\"Fullpage-container\" \r\n                    direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} xl={4}>\r\n                        <img src={dmLogo} className=\"Login-logo\" alt=\"logo\" />\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <AuthFrame>\r\n                            {(function(authObject) \r\n                                {\r\n                                    switch(authObject.state.authState) \r\n                                    {\r\n                                        case 'signIn':\r\n                                            return <SignIn changeState={authObject.changeState} awsSignIn={authObject.signIn} changeLanguage={authObject.props.changeLanguage}/>;\r\n                                        case 'signUp':\r\n                                            return <SignUp changeState={authObject.changeState} awsSignUp={authObject.signUp} />;\r\n                                        case 'forgetPassword':\r\n                                            return <ForgetPassword changeState={authObject.changeState} awsForgetPassword={authObject.forgetPassword} />;\r\n                                        default:\r\n                                            return null;\r\n                                    }\r\n                                })(this)\r\n                            }\r\n                        </AuthFrame>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DmAuthenticator;","import React, { Component } from 'react';\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport en from 'react-intl/locale-data/en';\r\nimport ja from 'react-intl/locale-data/ja';\r\nimport zh from 'react-intl/locale-data/zh';\r\n\r\nimport intlMessagesEN from './en.json';\r\nimport intlMessagesZH from './zh.json';\r\nimport intlMessagesJA from './ja.json';\r\n\r\nclass DmIntlProvider extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        addLocaleData([...en,...zh,...ja]);\r\n        this.state = {\r\n            locale: 'en',\r\n            messages: intlMessagesEN \r\n        };\r\n        this.changeLanguage = this.changeLanguage.bind(this);\r\n    }\r\n\r\n    changeLanguage(langCode)\r\n    {\r\n        console.log(langCode);\r\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"lang\", langCode);\r\n        switch(langCode)\r\n        {\r\n            case \"en\":\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesEN\r\n                });\r\n                break;\r\n            case \"zh\":\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesZH\r\n                });\r\n                break;\r\n            case \"ja\":\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesJA\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    locale: langCode,\r\n                    messages: intlMessagesEN\r\n                });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <IntlProvider locale={ this.state.locale } messages={this.state.messages}>\r\n                {React.cloneElement(this.props.children, { changeLanguage: this.changeLanguage })}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DmIntlProvider;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport DmAuthenticator from './authentication/DmAuthenticator';\nimport DmIntlProvider from './languages/DmIntlProvider';\nimport * as serviceWorker from './serviceWorker';\nimport DMTheme from './theme.json';\n\nconst theme = createMuiTheme(DMTheme);\n\nReactDOM.render(<MuiThemeProvider theme={theme}><DmIntlProvider><DmAuthenticator /></DmIntlProvider></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}