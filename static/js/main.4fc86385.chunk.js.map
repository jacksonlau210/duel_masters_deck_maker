{"version":3,"sources":["images/dm_logo.png","images/dm__icon.png","images/deck_case.png","images/dialog_background.gif","ui_components/AuthFrame.js","authentication/SignIn.js","authentication/SignUp.js","authentication/ForgetPassword.js","authentication/VerifSignInDialog.js","authentication/VerifForgetPasswordDialog.js","authentication/DmAuthenticator.js","ui_components/SideNav.js","dm_components/ConfirmDialog.js","App.js","router/PrivateRoute.js","ui_components/GridView.js","dm_components/DeckView.js","dm_components/DeckNameDialog.js","redux/actions/uiEventActions.js","redux/actions/dmDeckActions.js","pages/DeckManager.js","dm_components/InsertCardDialog.js","redux/actions/dmDialogActions.js","dm_components/CardDetailDialog.js","dm_components/CardView.js","ui_components/FormControlImage.js","ui_components/CheckboxSelect.js","dm_components/FilterDialog.js","dm_components/SortMenu.js","utils/cardListModifier.js","dm_components/CardGrid.js","pages/DeckEditor.js","dm_components/ProductView.js","redux/actions/dmProductActions.js","pages/ProductGallery.js","redux/actions/dmCardActions.js","pages/CardGallery.js","router/DmRouter.js","languages/DmIntlProvider.js","redux/reducers/dmProductReducer.js","redux/reducers/uiEventReducer.js","redux/reducers/dmDialogReducer.js","redux/reducers/dmCardReducer.js","redux/reducers/dmDeckReducer.js","redux/reducers/appReducer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","backgroundColor","padding","props","classes","children","react_default","a","createElement","Paper_default","elevation","SignIn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTextChange","event","setState","defineProperty","target","id","value","handleClickShowPassword","showPassword","state","clearError","emailErrorMsg","passwordErrorMsg","email","password","prevProps","errorObj","errObject","code","message","_this2","onSubmit","e","preventDefault","awsSignIn","core_index_es","container","direction","spacing","item","Typography_default","variant","color","index_es","alignItems","xs","icons_index_es","label","type","error","helperText","fullWidth","onInput","onChange","htmlFor","endAdornment","position","aria-label","onClick","justify","changeState","Component","SignUp","usernameErrorMsg","username","includes","awsSignUp","ForgetPassword","awsForgetPassword","VerifSignInDialog","codeErrorMsg","handleClose","disableBackdropClick","disableEscapeKeyDown","open","onExit","aria-labelledby","autoFocus","awsResendCode","awsVerifyCode","VerifForgetPasswordDialog","lg","awsVerifyPasswordCode","AWS_Config","API","endpoints","custom_header","asyncToGenerator","regenerator_default","mark","_callee","token","wrap","_context","prev","next","Auth","currentSession","sent","idToken","jwtToken","abrupt","Authorization","stop","Amplify","configure","DmAuthenticator","signIn","then","user","history","push","catch","err","childError","signUp","trim","length","attributes","name","data","authuser","showVerifCodeDialog","forgetPassword","forgotPassword","forgetPsEmail","showVerifPasswordCodeDialog","resentSignUpCode","resendSignUp","verificationSignInError","verifySignUpCode","confirmSignUp","verifyForgetPasswordCode","newPassword","forgotPasswordSubmit","authState","verificationForgetPsError","targetAuthState","authUser","className","Grid_default","xl","src","dmLogo","alt","ui_components_AuthFrame","authObject","authentication_SignIn","authentication_SignUp","authentication_ForgetPassword","authentication_VerifSignInDialog","authentication_VerifForgetPasswordDialog","withRouter","SideNav","dmIcon","Link","to","title","placement","showLanguageMenu","showConfirmDialog","ConfirmDialog","_ref","closeDialog","dialogTitle","dialogMessage","submitAction","submitButtonText","aria-describedby","App","signOut","console","log","toggleDrawer","showDrawer","languageMenuAnchorEl","_this$props","mainComponent","titleId","changeLanguage","_this$state","ui_components_SideNav","currentTarget","mobileMenu","menuButton","grow","componentWrapper","compName","gutterBottom","dm_components_ConfirmDialog","anchorEl","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","onClose","localStorage","setItem","anchor","tabIndex","role","onKeyDown","primary","drawerText","theme","_root","paddingTop","height","breakpoints","up","marginLeft","display","flexGrow","marginRight","PrivateRoute","shouldRender","currentAuthenticatedUser","unlisten","listen","component","rest","objectWithoutProperties","Route","assign","render","src_App","Redirect","pathname","gridViewBox","flexWrap","justifyContent","width","overflowY","deckViewBox","textAlign","deckContent","fontFamily","fontWeight","fontSize","marginTop","deckImage","maxWidth","deckDetailLink","textDecoration","flexBasis","&:hover","border","borderRadius","_ref2","deck","deckId","_id","imgDeckCase","DeckNameDialog","deckName","submit","handleDeckName","START_API_CALL","FINISH_API_CALL","FINISH_API_ERR","startAPICall","finishAPICall","finishAPIError","errMsg","RECEIVE_PLAYER_DECK_LIST","RECEIVE_SINGLE_PLAYER_DECK","RESET_DECK_LIST","resetDeckList","getPlayerDecks","dispatch","get","response","decks","getPlayerDeck","DeckManager","createDeck","createPlayerDeck","closeDeckNameDialog","showDeckNameDialog","dmDeckList","apiCallStatus","react","ui_components_GridView","map","dm_components_DeckView","key","addFab","dm_components_DeckNameDialog","connect","uiEvents","myInit","body","userId","post","right","unit","bottom","deleteFab","InsertCardDialog","handleChange","handleDialogClose","quantity","setId","setNumber","insertCardsToDeck","card","gridContainer","gridItemImgContainer","App_Config","dmCardImageLink","cardImage","gridItemDetailContainer","sm","formControl","inputProps","requestBody","put","gridGap","effectList","listStyleType","gridTemplateColumns","SET_TARGET_CARD","OPEN_CARD_DETAIL_DIALOG","CLOSE_CARD_DETAIL_DIALOG","OPEN_INSERT_CARD_DIALOG","CLOSE_INSERT_CARD_DIALOG","OPEN_DECK_NAME_DIALOG","CLOSE_DECK_NAME_DIALOG","OPEN_FILTER_DIALOG","CLOSE_FILTER_DIALOG","closeCardDetailDialog","showDetailDialog","dmDialog","cardDetailDialog","showInsertDialog","insertCardDialog","targetCard","openinsertCardDialog","closeinsertCardDialog","dialogTitleBar","dialogContent","backgroundImage","imgDialogBackground","civilImage","cardAction","rmCardAction","DialogTitle_default","disableTypography","toUpperCase","civilizations","civil","cloudfrontImageLink","rarityCd","cost","mana","undefined","power","races","race","light","effects","effect","index","dm_components_InsertCardDialog","cardViewBox","cardContent","cardDetailLink","handleClick","classnames","checkBoxImg","maxHeight","verticalAlign","control","imgLink","selectFormControl","chips","chip","margin","controlLabel","valueList","selectList","handleSelectChange","multiple","renderValue","selected","selectOption","checked","FilterDialog","originalListName","concat","toConsumableArray","filter","handleRangeChange","filterCostRange","filterPowerRange","Number","negErrorMsg","maxErrorMsg","costMinErrorMsg","costMaxErrorMsg","powerMinErrorMsg","powerMaxErrorMsg","handleOnClose","closeFilterDialog","handleFilterChange","_this$state2","objectSpread","filterOption","_this$props2","showFilterDialog","raceList","cardTypeList","_this$state3","filterRace","filterCardType","filterCivil","filterRarity","ui_components_CheckboxSelect","row","ui_components_FormControlImage","rarity","minMaxField","filterDialog","SortMenu","defaultSelect","sortMenuAnchorEl","handleSortMenuClose","radio","&$checked","sortList","defaultCardList","cardList","option","slice","sort","first","second","CardGrid","getRaceList","originalCardList","array","forEach","getCardTypeList","sortOption","filteredList","checkSingleCode","codeList","checkMultiCode","codes","checkRange","range","filterList","displayCardList","handleSortSelectChange","showSortMenu","showdeckNameDialog","setTargetCard","openCardDetailDialog","openDeckNameDialog","openFilterDialog","gridTitle","titleEditable","editDeckNameFunc","removeCardFunc","disabled","dm_components_CardView","dm_components_SortMenu","dm_components_FilterDialog","dm_components_CardDetailDialog","deckNameDialog","flexColumnBox","flexFlow","gridWrapper","firstColumn","secondColumn","topFab","gridTemplateRows","DeckEditor","editDeckName","cachedDeck","newDeck","removeCardFromDeck","removingCard","cards","location","dmDeck","updatePlayerDecks","deletePlayerDeck","dm_components_CardGrid","insertCardFab","saveFab","deckObject","del","parseSetId","setCode","split","toLocaleUpperCase","productViewBox","productContent","productImage","cardGalleryLink","product","productType","action","seriesName","seriesNumber","primaryId","RECEIVE_BOOSTER_PACK_LIST","RECEIVE_STARTER_DECK_LIST","getBoosterPack","boosterPacks","getStarterDeck","starterDecks","ProductGallery","getDmProduct","dmProductList","appBarButtonWrapper","dm_components_ProductView","RECEIVE_CARDS","RESET_CARD_LIST","resetCardList","receiveCards","json","CardGallery","handleInsertCardDialogClose","showInsertCardDialog","originCardList","cachedCardList","getCardsBySetId","getCardsByDeckId","dmCardList","window","scrollTo","DmRouter","BrowserRouter","basename","process","Switch","path","router_PrivateRoute","exact","intlMessageMap","en","zh","ja","DmIntlProvider","langCode","document","getElementsByTagName","setAttribute","locale","addLocaleData","defaultLangCode","getItem","messages","React","cloneElement","dmProductReducer","arguments","uiEventReducer","deckAPIErrMsg","dmDialogReducer","dmCardReducer","dmDeckReducer","appReducer","combineReducers","hostname","match","createMuiTheme","DMTheme","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","core_styles","es","languages_DmIntlProvider","router_DmRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fc86385.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dm_logo.605740b1.png\";","module.exports = __webpack_public_path__ + \"static/media/dm__icon.3bf9ba8e.png\";","module.exports = __webpack_public_path__ + \"static/media/deck_case.9b7b9245.png\";","module.exports = __webpack_public_path__ + \"static/media/dialog_background.c1ea59b6.gif\";","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n        padding: '30px'\r\n    }\r\n};\r\n\r\nfunction AuthFrame(props) {\r\n    const { classes, children } = props;\r\n\r\n    return (\r\n        <Paper classes={{root: classes.root}} elevation={1}>\r\n          { children }\r\n        </Paper>\r\n      );\r\n}\r\nexport default withStyles(styles)(AuthFrame);","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Button, TextField, Input, InputLabel, InputAdornment, IconButton, FormControl, FormHelperText } from '@material-ui/core';\r\nimport { Lock, Visibility, VisibilityOff, AccountCircle } from '@material-ui/icons';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            emailErrorMsg: \"\",\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            showPassword: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj === \"Username cannot be empty\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"UserNotFoundException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email does not exist\"});\r\n            }\r\n            else if(errorObj.code === \"UserNotConfirmedException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Account is not confirmed\"});\r\n            }\r\n            else if(errorObj.code === \"NotAuthorizedException\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Incorrect password\"});\r\n            }\r\n            else if(errorObj.code === \"UnexpectedLambdaException\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password cannot be empty\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({emailErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange = event =>\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    };\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"email\")\r\n        {\r\n            this.setState({ emailErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"password\")\r\n        {\r\n            this.setState({ passwordErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.awsSignIn(this.state.email, this.state.password); } }>\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleSignIn\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle color=\"primary\"/>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\"\r\n                                    label={<FormattedMessage id=\"txtEmail\"/>}\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    error={this.state.emailErrorMsg !== \"\"}\r\n                                    helperText={this.state.emailErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Lock color=\"primary\"/>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <FormControl fullWidth={true} error={this.state.passwordErrorMsg !== \"\"}>\r\n                                    <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                    <Input \r\n                                        id=\"password\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onInput={(event) => this.clearError(event)}\r\n                                        onChange={(event) => this.handleTextChange(event)}\r\n                                        endAdornment=\r\n                                        {\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowPassword}>\r\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                                        {this.state.passwordErrorMsg !== '' && <FormHelperText>{this.state.passwordErrorMsg}</FormHelperText>}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"secondary\" type=\"submit\" fullWidth={true} ><FormattedMessage id=\"btnSignIn\"/></Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"forgetPassword\")}><FormattedMessage id=\"btnForgetPassword\"/></Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signUp\")}><FormattedMessage id=\"btnCreateAccount\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Button, TextField, Input, InputLabel, InputAdornment, IconButton, FormControl, FormHelperText } from '@material-ui/core';\r\nimport { Lock, Visibility, VisibilityOff, Email, AccountCircle  } from '@material-ui/icons';\r\n\r\nclass SignUp extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            emailErrorMsg: \"\",\r\n            username: \"\",\r\n            usernameErrorMsg: \"\",\r\n            password: \"\",\r\n            passwordErrorMsg: \"\",\r\n            showPassword: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj.code === \"EmptyUserException\") \r\n            {\r\n                this.setState({usernameErrorMsg: \"Username cannot be empty\"});\r\n            }\r\n            else if(errorObj === \"Username cannot be empty\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"UsernameExistsException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email already in used\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidParameterException\" && errorObj.message.includes(\"Invalid email\")) \r\n            {\r\n                this.setState({emailErrorMsg: \"Invalid email address format.\"});\r\n            }\r\n            else if(errorObj === \"Password cannot be empty\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password cannot be empty\"});\r\n            }\r\n            else if(errorObj.message.includes(\"equal to 6\") || errorObj.message.includes(\"long enough\"))\r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must be at least 8 characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"uppercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have uppercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"lowercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have lowercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"numeric \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have numeric characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"symbol \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have symbol characters\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({emailErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange = event => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    };\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"email\")\r\n        {\r\n            this.setState({ emailErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"username\")\r\n        {\r\n            this.setState({ usernameErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"password\")\r\n        {\r\n            this.setState({ passwordErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.awsSignUp(this.state.email, this.state.username, this.state.password)}} >\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleSignUp\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Email color=\"primary\"/>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\"\r\n                                    label={<FormattedMessage id=\"txtEmail\"/>}\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    error={this.state.emailErrorMsg !== \"\"}\r\n                                    helperText={this.state.emailErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle color=\"primary\"/>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"username\"\r\n                                    label={<FormattedMessage id=\"txtUsername\"/>}\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    error={this.state.usernameErrorMsg !== \"\"}\r\n                                    helperText={this.state.usernameErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <Lock color=\"primary\"/>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <FormControl fullWidth={true} error={this.state.passwordErrorMsg !== \"\"}>\r\n                                    <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                    <Input \r\n                                        id=\"password\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onInput={(event) => this.clearError(event)}\r\n                                        onChange={(event) => this.handleTextChange(event)}\r\n                                        endAdornment=\r\n                                        {\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowPassword}>\r\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                                        {this.state.passwordErrorMsg !== \"\" && <FormHelperText>{this.state.passwordErrorMsg}</FormHelperText>}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" fullWidth={true} ><FormattedMessage id=\"titleSignUp\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signIn\")}><FormattedMessage id=\"btnSignInInstead\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { AccountCircle  } from '@material-ui/icons';\r\n\r\nclass ForgetPassword extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            emailErrorMsg: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj === \"Username cannot be empty\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"UserNotFoundException\") \r\n            {\r\n                this.setState({emailErrorMsg: \"Email does not exist\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({emailErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    clearError = (event) => {\r\n        this.setState({ emailErrorMsg: ''});\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <form onSubmit={(e) => { e.preventDefault(); this.props.awsForgetPassword(this.state.email)}} >\r\n                <Grid container direction=\"column\" spacing={16}>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Typography variant=\"h5\" color=\"textPrimary\"><FormattedMessage id=\"titleForgetPassword\"/></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"flex-end\">\r\n                            <Grid item xs={2}>\r\n                                <AccountCircle color=\"primary\"/>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField id=\"email\"\r\n                                    label={<FormattedMessage id=\"txtEmail\"/>}\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    error={this.state.emailErrorMsg !== \"\"}\r\n                                    helperText={this.state.emailErrorMsg}\r\n                                    fullWidth={true}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" fullWidth={true} ><FormattedMessage id=\"btnGetNewPassword\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container justify=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button color=\"primary\" onClick={() => this.props.changeState(\"signIn\")}><FormattedMessage id=\"btnSignInInstead\"/></Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgetPassword;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n\r\nclass VerifSignInDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            code: '',\r\n            codeErrorMsg: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n                this.setState({codeErrorMsg: \"Invalid verification code provided, please try again\"});\r\n            if(errorObj === \"Code cannot be empty\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Code cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"CodeMismatchException\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Invalid verification code provided, please try again\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({codeErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({code: event.target.value});\r\n    }\r\n\r\n    clearError = (event) => {\r\n        this.setState({ codeErrorMsg: ''});\r\n    }\r\n\r\n    handleClose = () => {\r\n        //clear form\r\n        this.setState({\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            code: '',\r\n            codeErrorMsg: \"\",\r\n            showPassword: false\r\n        });\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                onExit={() => this.handleClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\"><FormattedMessage id=\"titleVerifySignIn\"/></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText><FormattedMessage id=\"txtVerifySignInCodePrompt\"/></DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        label={<FormattedMessage id=\"txtVerifyCode\"/>}\r\n                        value={this.state.code} \r\n                        error={this.state.codeErrorMsg !== \"\"}\r\n                        helperText={this.state.codeErrorMsg}\r\n                        fullWidth\r\n                        onInput={(event) => this.clearError(event)}\r\n                        onChange={(event) => this.handleTextChange(event)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.props.awsResendCode()} ><FormattedMessage id=\"btnResendCode\"/></Button>\r\n                    <Button onClick={() => this.props.awsVerifyCode(this.state.code)} ><FormattedMessage id=\"btnConfirm\"/></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerifSignInDialog;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Grid, Input, InputLabel, InputAdornment, IconButton, FormControl, FormHelperText, Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nclass VerifForgetPasswordDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            code: '',\r\n            codeErrorMsg: \"\",\r\n            showPassword: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let errorObj = this.props.errObject;\r\n        if(errorObj && errorObj !== prevProps.errObject)\r\n        {\r\n            if(errorObj === \"Code cannot be empty\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Code cannot be empty\"});\r\n            }\r\n            else if(errorObj.code === \"CodeMismatchException\") \r\n            {\r\n                this.setState({codeErrorMsg: \"Invalid verification code provided, please try again.\"});\r\n            }\r\n            else if(errorObj === \"Password cannot be empty\") \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password cannot be empty\"});\r\n            }\r\n            else if(errorObj.message.includes(\"equal to 6\") || errorObj.message.includes(\"long enough\"))\r\n            {\r\n                this.setState({passwordErrorMsg: \"Password length must at least has 8 characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"uppercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have uppercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"lowercase\")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have lowercase characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"numeric \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have numeric characters\"});\r\n            }\r\n            else if(errorObj.code === \"InvalidPasswordException\" && errorObj.message.includes(\"symbol \")) \r\n            {\r\n                this.setState({passwordErrorMsg: \"Password must have symbol characters\"});\r\n            }\r\n            else\r\n            {\r\n                this.setState({codeErrorMsg: errorObj.message});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState({ showPassword: !this.state.showPassword });\r\n    };\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"password\")\r\n        {\r\n            this.setState({ passwordErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"code\")\r\n        {\r\n            this.setState({ codeErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        //clear form\r\n        this.setState({\r\n            password: '',\r\n            passwordErrorMsg: \"\",\r\n            code: '',\r\n            codeErrorMsg: \"\",\r\n            showPassword: false\r\n        });\r\n    }\r\n\r\n    render() \r\n    {\r\n        return(\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={this.props.open}\r\n                onExit={() => this.handleClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\"><FormattedMessage id=\"titleVerifyForgetPs\"/></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText><FormattedMessage id=\"txtVerifyForgetPsCodePrompt\"/></DialogContentText>\r\n                    <Grid container spacing={16}>\r\n                        <Grid item xs={12} lg={6}>\r\n                            <FormControl fullWidth={true} error={this.state.passwordErrorMsg !== \"\"}>\r\n                                <InputLabel htmlFor=\"password\"><FormattedMessage id=\"txtPassword\"/></InputLabel>\r\n                                <Input \r\n                                    id=\"password\"\r\n                                    type={this.state.showPassword ? 'text' : 'password'}\r\n                                    value={this.state.password}\r\n                                    onInput={(event) => this.clearError(event)}\r\n                                    onChange={(event) => this.handleTextChange(event)}\r\n                                    endAdornment=\r\n                                    {\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"Toggle password visibility\"\r\n                                                onClick={this.handleClickShowPassword}>\r\n                                                {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }/>\r\n                                    {this.state.passwordErrorMsg !== \"\" && <FormHelperText>{this.state.passwordErrorMsg}</FormHelperText>}\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={6}> \r\n                            <TextField id=\"code\"\r\n                                label={<FormattedMessage id=\"txtVerifyCode\"/>}\r\n                                value={this.state.code} \r\n                                error={this.state.codeErrorMsg !== \"\"}\r\n                                helperText={this.state.codeErrorMsg}\r\n                                fullWidth\r\n                                onInput={(event) => this.clearError(event)}\r\n                                onChange={(event) => this.handleTextChange(event)}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.props.awsVerifyPasswordCode(this.state.password, this.state.code)} ><FormattedMessage id=\"btnConfirm\"/></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerifForgetPasswordDialog;","import React, { Component } from 'react';\r\nimport dmLogo from '../images/dm_logo.png';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport AuthFrame from '../ui_components/AuthFrame';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport ForgetPassword from './ForgetPassword';\r\nimport VerifSignInDialog from './VerifSignInDialog';\r\nimport VerifForgetPasswordDialog from './VerifForgetPasswordDialog';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AWS_Config from '../config/aws-config.json';\r\n\r\nAWS_Config.API.endpoints[0].custom_header = async () => {\r\n    let token = (await Auth.currentSession()).idToken.jwtToken;\r\n    // console.log(token);\r\n    return { Authorization: token };\r\n}\r\nAmplify.configure(AWS_Config);\r\n\r\nclass DmAuthenticator extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            authState: 'signIn',\r\n            authUser: null,\r\n            childError: null,\r\n            verificationSignInError: null,\r\n            verificationForgetPsError: null,\r\n            forgetPsEmail: '',\r\n            showVerifCodeDialog: false,\r\n            showVerifPasswordCodeDialog: false\r\n        };\r\n    }\r\n\r\n    signIn = (email, password) => {\r\n        Auth.signIn(email, password)\r\n            .then(user => {\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({childError: err})\r\n            });\r\n    }\r\n\r\n    signUp = (email, username, password) => {\r\n        if(username.trim().length === 0) //Amplify does not check email length\r\n        {\r\n            this.setState({childError: {code: \"EmptyUserException\"}})\r\n        }\r\n        else\r\n        {\r\n            Auth.signUp({\r\n                username: email,\r\n                password: password,\r\n                attributes: \r\n                {\r\n                    email: email,\r\n                    name: username\r\n                }\r\n            })\r\n            .then(data => {\r\n                // if success, system will send email with verification code\r\n                // show dialog for verification code input\r\n                this.setState({authuser: data.user, showVerifCodeDialog: true});\r\n            })\r\n            .catch(err => {\r\n                this.setState({childError: err})\r\n            });\r\n        }\r\n    }\r\n\r\n    forgetPassword = (email) => {\r\n\r\n        // we only want to run when input does not look like email\r\n        Auth.forgotPassword(email)\r\n            .then(data => {\r\n                this.setState({forgetPsEmail: email, showVerifPasswordCodeDialog: true});\r\n            })\r\n            .catch(err => this.setState({childError: err}));\r\n    }\r\n\r\n    resentSignUpCode = () => {\r\n        Auth.resendSignUp(this.state.authuser.username)\r\n            .catch(err => this.setState({verificationSignInError: err}));\r\n    }\r\n\r\n    verifySignUpCode = (code) => {\r\n        Auth.confirmSignUp(this.state.authuser.username, code)\r\n            .then(data => {\r\n                this.setState({showVerifCodeDialog: false});\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => this.setState({verificationSignInError: err}));\r\n    }\r\n\r\n    verifyForgetPasswordCode = (newPassword, code) => {\r\n        Auth.forgotPasswordSubmit(this.state.forgetPsEmail, code, newPassword)\r\n            .then(data => {\r\n                this.setState({showVerifPasswordCodeDialog: false, authState: 'signIn'});\r\n                this.changeState('signIn');\r\n            })\r\n            .catch(err => this.setState({verificationForgetPsError: err}));\r\n    }\r\n\r\n    changeState = (targetAuthState) => {\r\n        this.setState({authState: targetAuthState});\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"DmAuthenticator\">\r\n                <Grid container className=\"Fullpage-container\" \r\n                    direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} xl={4}>\r\n                        <img src={dmLogo} className=\"Login-logo\" alt=\"logo\" />\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <AuthFrame>\r\n                            {(function(authObject) \r\n                                {\r\n                                    switch(authObject.state.authState) \r\n                                    {\r\n                                        case 'signIn':\r\n                                            return <SignIn changeState={authObject.changeState} awsSignIn={authObject.signIn} errObject={authObject.state.childError} />;\r\n                                        case 'signUp':\r\n                                            return <SignUp changeState={authObject.changeState} awsSignUp={authObject.signUp} errObject={authObject.state.childError}/>;\r\n                                        case 'forgetPassword':\r\n                                            return <ForgetPassword changeState={authObject.changeState} awsForgetPassword={authObject.forgetPassword} errObject={authObject.state.childError}/>;\r\n                                        default:\r\n                                            return null;\r\n                                    }\r\n                                })(this)\r\n                            }\r\n                        </AuthFrame>\r\n                    </Grid>\r\n                </Grid>\r\n                <VerifSignInDialog open={this.state.showVerifCodeDialog} awsVerifyCode={this.verifySignUpCode}  awsResendCode={this.resentSignUpCode} errObject={this.state.verificationSignInError}/>\r\n                <VerifForgetPasswordDialog open={this.state.showVerifPasswordCodeDialog}  awsVerifyPasswordCode={this.verifyForgetPasswordCode} errObject={this.state.verificationForgetPsError}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DmAuthenticator);","import React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport './SideNav.css';\r\nimport { Tooltip, IconButton } from '@material-ui/core';\r\nimport { Collections, Work, Language ,PowerSettingsNew } from '@material-ui/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport dmIcon from '../images/dm__icon.png'\r\n\r\nfunction SideNav(props) {\r\n    return (\r\n        <div id=\"sidenav\">\r\n            <div id=\"topSideNav\">\r\n                <img alt=\"DM\" src={dmIcon} id=\"dmIcon\"/>\r\n                <hr/>\r\n                <Link to=\"/deckManager\">\r\n                    <Tooltip title={<FormattedMessage id=\"titleDeckManager\"/>} placement=\"right\">\r\n                        <IconButton color=\"primary\">\r\n                            <Work />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n                <Link to=\"/productGallery\">\r\n                    <Tooltip title={<FormattedMessage id=\"titleProductGallery\"/>} placement=\"right\">\r\n                        <IconButton color=\"primary\">\r\n                            <Collections />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n            </div>\r\n            <div id=\"bottomSideNav\">\r\n                <Tooltip title={<FormattedMessage id=\"titleLanguageSetting\"/>} placement=\"right\">\r\n                    <IconButton color=\"primary\" onClick={(e) => props.showLanguageMenu(e)}>\r\n                        <Language />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={<FormattedMessage id=\"titleLogout\"/>} placement=\"right\">\r\n                    <IconButton color=\"primary\" onClick={() => props.showConfirmDialog()}>\r\n                        <PowerSettingsNew />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SideNav;","import React from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n\r\nconst ConfirmDialog = ({open, closeDialog, dialogTitle, dialogMessage, submitAction, submitButtonText}) => (\r\n    <Dialog\r\n        open={open}\r\n        aria-labelledby=\"logout-dialog-title\"\r\n        aria-describedby=\"logout-dialog-description\">\r\n        <DialogTitle id=\"logout-dialog-title\">{dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText id=\"logout-dialog-description\">\r\n                {dialogMessage}\r\n            </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={() => closeDialog()}><FormattedMessage id=\"btnCancel\"/></Button>\r\n            <Button onClick={() => submitAction()} autoFocus>{submitButtonText}</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nexport default ConfirmDialog;","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport SideNav from './ui_components/SideNav';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Auth } from 'aws-amplify';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Menu, MenuItem, Toolbar, IconButton, Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Menu as MenuIcon, Language ,PowerSettingsNew, Work, Collections } from '@material-ui/icons';\r\nimport ConfirmDialog from './dm_components/ConfirmDialog'\r\n\r\nconst styles = theme => (\r\n  {\r\n    root: {\r\n      paddingTop: '56px',\r\n      height: '97vh',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: '50px'\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        marginLeft: '60px'\r\n      }\r\n  },\r\n  compName: {\r\n    display: 'none'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerText: {\r\n    \"color\": \"#eeeeee\"\r\n  },\r\n  componentWrapper: {\r\n    padding: '10px'\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    root: {\r\n      paddingTop: '0px'\r\n    },\r\n    compName: {\r\n      display: 'block'\r\n    },\r\n    mobileMenu: {\r\n      display: 'none'\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends Component \r\n{\r\n  constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n          languageMenuAnchorEl : null,\r\n          showConfirmDialog: false,\r\n          showDrawer: false\r\n        };\r\n    }\r\n\r\n  signOut = () => {\r\n      Auth.signOut()\r\n        .then(data => {this.setState({showConfirmDialog: false}); this.props.history.push('/auth');})\r\n        .catch(err => console.log(err));\r\n  }\r\n\r\n  toggleDrawer = (open) => () => {\r\n    this.setState({\r\n      showDrawer: open,\r\n    });\r\n  };\r\n\r\n  render() \r\n  {\r\n    const { mainComponent: Component, classes, titleId, changeLanguage } = this.props;\r\n    const { languageMenuAnchorEl, showConfirmDialog, showDrawer } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <SideNav \r\n          showConfirmDialog={() => this.setState({showConfirmDialog: true})} \r\n          showLanguageMenu={(e) => this.setState({languageMenuAnchorEl: e.currentTarget})} />\r\n        <div className={classes.root}>\r\n          <AppBar position=\"fixed\" color=\"primary\" className={classes.mobileMenu}>\r\n            <Toolbar>\r\n              <IconButton className={classes.menuButton} \r\n                color=\"primary\" \r\n                aria-label=\"Menu\"\r\n                onClick={this.toggleDrawer(true)}>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                <FormattedMessage id={titleId}/>\r\n              </Typography>\r\n              <IconButton color=\"primary\" onClick={(e) => this.setState({languageMenuAnchorEl: e.currentTarget})}>\r\n                <Language />\r\n              </IconButton>\r\n              <IconButton color=\"primary\" onClick={() => this.setState({showConfirmDialog: true})}>\r\n                <PowerSettingsNew />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={classes.componentWrapper}>\r\n            <div>\r\n              <Typography variant=\"h3\" color=\"textPrimary\" className={classes.compName} gutterBottom><FormattedMessage id={titleId}/></Typography>\r\n              <Component />\r\n            </div>\r\n            \r\n          </div>\r\n        </div >\r\n        <ConfirmDialog open={showConfirmDialog}\r\n          dialogTitle={<FormattedMessage id=\"titleLogout\"/>}\r\n          dialogMessage={<FormattedMessage id=\"txtLogoutWarn\"/>}\r\n          closeDialog={() => this.setState({showConfirmDialog: false})}\r\n          submitButtonText={<FormattedMessage id=\"titleLogout\"/>}\r\n          submitAction={this.signOut}/>\r\n        <Menu\r\n          id=\"langaugeMenu\"\r\n          anchorEl={languageMenuAnchorEl}\r\n          open={Boolean(languageMenuAnchorEl)}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          onClose={() => this.setState({languageMenuAnchorEl: null})} >\r\n          <MenuItem onClick={() => { localStorage.setItem('langCode', \"en\");changeLanguage(\"en\");this.setState({languageMenuAnchorEl: null});}}>English</MenuItem>\r\n          <MenuItem onClick={() => { localStorage.setItem('langCode', \"zh\");changeLanguage(\"zh\");this.setState({languageMenuAnchorEl: null});}}>繁體中文</MenuItem>\r\n          <MenuItem onClick={() => { localStorage.setItem('langCode', \"ja\");changeLanguage(\"ja\");this.setState({languageMenuAnchorEl: null});}}>日本語</MenuItem>\r\n        </Menu>\r\n        <Drawer anchor=\"left\" open={showDrawer} onClose={this.toggleDrawer(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}>\r\n            <List>\r\n              <Link to=\"/deckManager\">\r\n                <ListItem>\r\n                    <ListItemIcon><Work /></ListItemIcon>\r\n                    <ListItemText classes={{ primary: classes.drawerText }} primary={<FormattedMessage id=\"titleDeckManager\" />} />\r\n                </ListItem>\r\n              </Link>\r\n              <Link to=\"/productGallery\">\r\n                <ListItem>\r\n                    <ListItemIcon><Collections /></ListItemIcon>\r\n                    <ListItemText classes={{ primary: classes.drawerText }} primary={<FormattedMessage id=\"titleProductGallery\" />} />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(App));\r\n","import React, { Component } from 'react';\r\nimport {  Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { Auth } from 'aws-amplify';\r\nimport App from '../App';\r\n\r\nclass PrivateRoute extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            shouldRender: false,\r\n            authUser: null\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // check user login when they first launch the page\r\n        Auth.currentAuthenticatedUser()\r\n            .then(user => this.setState({shouldRender: true,authUser: user}))\r\n            // when shouldRender still set to false, render() would not render anything\r\n            // that's why we cannot use setState here\r\n            .catch(err => this.props.history.push('/auth')); \r\n\r\n        // check user login when the path changed\r\n        this.unlisten = this.props.history.listen(() => {\r\n            Auth.currentAuthenticatedUser()\r\n            .then(user => {this.setState({shouldRender: true,authUser: user})})\r\n            .catch(err => {this.setState({authUser: null})});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        this.unlisten();\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { component: Component,  titleId, changeLanguage, ...rest } = this.props;\r\n        const { shouldRender, authUser } = this.state;\r\n\r\n        if (!shouldRender) return null;\r\n        \r\n        return(\r\n            <Route {...rest}\r\n                render={props => {\r\n                    return authUser !== null? \r\n                        (<App authUser={authUser} mainComponent={Component} titleId={titleId} changeLanguage={changeLanguage} {...props} />) :\r\n                        (<Redirect to={{ pathname: \"/auth\"}} />)\r\n                }}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PrivateRoute);\r\n","import React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles  = theme => (\r\n{\r\n    gridViewBox: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'flex-start',\r\n        padding: '10px',\r\n        width: 'inherit',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        flexGrow: '1'\r\n    },\r\n    \r\n});\r\n\r\nfunction GridView({ classes, children}) {\r\n    return (\r\n        <Paper className={classes.gridViewBox}>\r\n            { children }\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(GridView);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport imgDeckCase from '../images/deck_case.png';\r\n\r\nconst styles = theme => ({\r\n    deckViewBox: {\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n    },\r\n    deckContent: {\r\n        fontFamily: 'Meiryo',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        marginTop: '5px'\r\n    },\r\n    deckImage: {\r\n        width: '100%',\r\n        maxWidth: '100px',\r\n        height: 'auto'\r\n    },\r\n    deckDetailLink: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        flexBasis: '100px',\r\n        '&:hover': {\r\n            color: '#2bd5c6',\r\n        }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        deckDetailLink: {\r\n            flexBasis: '105px',\r\n            border: '1px solid white',\r\n            '&:hover': {\r\n                color: '#2bd5c6',\r\n                border: '1px solid #2bd5c6',\r\n                borderRadius: '5px'\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nfunction DeckView({ classes, deck }) {\r\n    return (\r\n        <Link className={classes.deckDetailLink} to={{ pathname: '/deckEditor', \r\n        state: { deckId: deck._id } }}>\r\n            <div className={classes.deckViewBox}>\r\n                <img src={imgDeckCase} className={classes.deckImage} />\r\n                <div className={classes.deckContent}>\r\n                    {deck.name}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(DeckView);","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Button, TextField, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n\r\nclass DeckNameDialog extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            deckName: '',\r\n            codeErrorMsg: \"\",\r\n        };\r\n    }\r\n\r\n    handleTextChange(event)\r\n    {\r\n        this.setState({deckName: event.target.value});\r\n    }\r\n\r\n    handleClose = () => {\r\n        //clear form\r\n        this.setState({\r\n            deckName: ''\r\n        });\r\n        this.props.closeDialog();\r\n    }\r\n\r\n    submit = (deckName) => {\r\n        if(deckName.length > 0)\r\n        {\r\n            this.props.handleDeckName(this.state.deckName);\r\n            this.handleClose();\r\n        }\r\n        else\r\n        {\r\n            this.setState({codeErrorMsg: \"Deck name cannot be empty\"});\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { open, titleId } = this.props;\r\n        const { deckName, codeErrorMsg } = this.state;\r\n\r\n        return(\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={open}\r\n                onExit={() => this.handleClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\"><FormattedMessage id={titleId}/></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <FormattedMessage id=\"txtDeckNamePrompt\"/>\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        label={<FormattedMessage id=\"txtDeckName\"/>}\r\n                        value={deckName}\r\n                        error={codeErrorMsg !== \"\"}\r\n                        helperText={codeErrorMsg}\r\n                        fullWidth\r\n                        onChange={(event) => this.handleTextChange(event)}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.handleClose()}><FormattedMessage id=\"btnCancel\"/></Button>\r\n                    <Button onClick={() => this.submit(deckName)}><FormattedMessage id=\"btnConfirm\"/></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeckNameDialog;","/*\r\n * action types\r\n */\r\n\r\nexport const START_API_CALL = 'START_API_CALL';\r\nexport const FINISH_API_CALL = 'FINISH_API_CALL';\r\nexport const FINISH_API_ERR = 'FINISH_API_ERR';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function startAPICall()\r\n{\r\n    return {\r\n        type: START_API_CALL\r\n    }\r\n}\r\n\r\nexport function finishAPICall()\r\n{\r\n    return {\r\n        type: FINISH_API_CALL\r\n    }\r\n}\r\n\r\nexport function finishAPIError(errMsg)\r\n{\r\n    return {\r\n        type: FINISH_API_ERR,\r\n        message: errMsg\r\n    }\r\n}","import { API, Auth } from 'aws-amplify';\r\nimport { startAPICall, finishAPICall, finishAPIError } from './uiEventActions'\r\n\r\n/*\r\n * action types\r\n */\r\nexport const GET_PLAYER_DECK_LIST = 'GET_PLAYER_DECK_LIST';\r\nexport const GET_SINGLE_PLAYER_DECK = 'GET_SINGLE_PLAYER_DECK';\r\nexport const RECEIVE_PLAYER_DECK_LIST = 'RECEIVE_PLAYER_DECK_LIST';\r\nexport const RECEIVE_SINGLE_PLAYER_DECK = 'RECEIVE_SINGLE_PLAYER_DECK';\r\nexport const INSERT_PLAYER_DECK = 'INSERT_PLAYER_DECK';\r\nexport const UPDATE_PLAYER_DECK = 'UPDATE_PLAYER_DECK';\r\nexport const INSERT_CARDS_TO_DECK = 'INSERT_CARDS_TO_DECK';\r\nexport const DELETE_PLAYER_DECK = 'DELETE_PLAYER_DECK';\r\nexport const RESET_DECK_LIST = 'RESET_DECK_LIST';\r\n\r\n /*\r\n * action creators\r\n */\r\n\r\nfunction resetDeckList()\r\n{\r\n    return {\r\n        type: RESET_DECK_LIST\r\n    }\r\n}\r\n\r\nexport function getPlayerDecks()\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetDeckList());\r\n        return Auth.currentAuthenticatedUser()\r\n            .then(user => {\r\n                console.log(user);\r\n                return API.get(\"Duel Masters API\", \"playerDecks/user/\"+user.username)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    dispatch(finishAPICall());\r\n                    dispatch(receivePlayerDecks(response));\r\n                })\r\n                .catch(error => {\r\n                    throw error;\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n}\r\n\r\nexport function getPlayerDeck(deckId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetDeckList());\r\n        return API.get(\"Duel Masters API\", \"playerDecks/\" + deckId)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receivePlayerDeck(response));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nfunction receivePlayerDecks(json)\r\n{\r\n    return {\r\n        type: RECEIVE_PLAYER_DECK_LIST,\r\n        decks: json\r\n    }\r\n}\r\n\r\nfunction receivePlayerDeck(json)\r\n{\r\n    return {\r\n        type: RECEIVE_SINGLE_PLAYER_DECK,\r\n        deck: json\r\n    }\r\n}\r\n\r\nexport function createPlayerDeck(deckName)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return Auth.currentAuthenticatedUser()\r\n            .then(user => {\r\n                console.log(user);\r\n                let myInit = {\r\n                    body: {name: deckName, userId: user.username}\r\n                };\r\n                \r\n                return API.post(\"Duel Masters API\", \"playerDecks/\", myInit)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    dispatch(finishAPICall());\r\n                })\r\n                .catch(error => {\r\n                    throw error;\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                finishAPIError(\"Error while inserting deck\");\r\n            });\r\n    };\r\n}\r\n\r\nexport function updatePlayerDecks(deckId, requestBody)\r\n{\r\n    let myInit = {\r\n        body: requestBody\r\n    }\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.put(\"Duel Masters API\", \"playerDecks/\" + deckId, myInit)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                finishAPIError(\"Error while udpating deck\");\r\n            })\r\n        };\r\n}\r\n\r\nexport function insertCardsToDeck(deckId, requestBody)\r\n{\r\n    let myInit = {\r\n        body: requestBody\r\n    }\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.put(\"Duel Masters API\", \"insertCards/\" + deckId, myInit)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                finishAPIError(\"Error while udpating deck\");\r\n            })\r\n        };\r\n}\r\n\r\nexport function deletePlayerDeck(deckId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.del(\"Duel Masters API\", \"playerDecks/\" + deckId)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                finishAPIError(\"Error while deleting deck\");\r\n            })\r\n        };\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { LinearProgress, Fab } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport GridView from '../ui_components/GridView';\r\nimport DeckView from '../dm_components/DeckView';\r\nimport DeckNameDialog from '../dm_components/DeckNameDialog';\r\nimport { getPlayerDecks, createPlayerDeck } from '../redux/actions/dmDeckActions';\r\n\r\nconst styles = theme => ({\r\n  addFab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 2,\r\n    bottom: theme.spacing.unit * 2\r\n  },\r\n  deleteFab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 4 + 56,\r\n    bottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmDeckList: state.dmDeckList,\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPlayerDecks: () => {dispatch(getPlayerDecks())},\r\n    createPlayerDeck: (deckName) => {dispatch(createPlayerDeck(deckName))}\r\n  };\r\n}\r\n\r\nclass DeckManager extends Component \r\n{\r\n  constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n          showDeckNameDialog: false\r\n        };\r\n    }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.props.getPlayerDecks();\r\n  }\r\n\r\n  createDeck = (deckName) => {\r\n    this.props.createPlayerDeck(deckName);\r\n\r\n    //refresh screen\r\n    this.props.getPlayerDecks();\r\n  }\r\n\r\n  closeDeckNameDialog = () => {\r\n    this.setState({showDeckNameDialog: false})\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, dmDeckList, apiCallStatus } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        { apiCallStatus===\"started\" && <LinearProgress /> }\r\n        <GridView>\r\n          { dmDeckList.map((deck) => <DeckView key={deck._id} deck={deck} />) }\r\n        </GridView>\r\n        <Fab color=\"primary\" className={classes.addFab} onClick={() => this.setState({showDeckNameDialog: true})}>\r\n          <Add />\r\n        </Fab>\r\n        <DeckNameDialog open={this.state.showDeckNameDialog} titleId=\"titleNewDeck\" handleDeckName={this.createDeck} closeDialog={this.closeDeckNameDialog}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DeckManager));","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Grid, Button, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\nimport { getPlayerDecks, insertCardsToDeck } from '../redux/actions/dmDeckActions';\r\n\r\nconst styles = theme => ({\r\n    dialogTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    cardImage: {\r\n        width: '215px'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n      },\r\n    gridContainer: {\r\n        display: 'grid',\r\n        gridGap: '10px',\r\n        marginTop: '10px'\r\n    },\r\n    gridItemImgContainer: {\r\n        textAlign: 'center'\r\n    },\r\n    gridItemDetailContainer: {\r\n        fontFamily: 'Meiryo',\r\n    },\r\n    effectList: {\r\n        listStyleType: 'square'\r\n    },\r\n    formControl: {\r\n        width: '100%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        gridContainer: {\r\n        gridTemplateColumns: 'auto auto'\r\n      },\r\n      gridItemDetailContainer: {\r\n          width: '200px'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dmDeckList: state.dmDeckList\r\n    };\r\n}\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPlayerDecks: () => {dispatch(getPlayerDecks())},\r\n        insertCardsToDeck: (deckId, requestBody) => {dispatch(insertCardsToDeck(deckId, requestBody))}\r\n    };\r\n}\r\n\r\nclass InsertCardDialog extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            deckId: '',\r\n            quantity: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.getPlayerDecks();\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        const { handleClose } = this.props;\r\n        this.setState({ deckId: '', quantity: 0 });\r\n        handleClose();\r\n    }\r\n\r\n    submit = (setId, setNumber) => {\r\n        const { insertCardsToDeck } = this.props;\r\n        const { deckId, quantity } = this.state;\r\n        insertCardsToDeck(deckId, {setId: setId, setNumber: setNumber, quantity: quantity});\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { classes, open, card, handleClose, dmDeckList } = this.props;\r\n\r\n        if(card === null) return null;\r\n\r\n        return (\r\n            <Dialog \r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                open={open}\r\n                onExit={() => this.handleDialogClose()}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\"><FormattedMessage id=\"titleInsertCard\" /></DialogTitle>\r\n                <DialogContent>\r\n                    <div className={classes.gridContainer}>\r\n                        <div className={classes.gridItemImgContainer}>\r\n                            <img src={App_Config.dmCardImageLink + card.setId + \"-\" + card.setNumber + \".jpg\"} className={classes.cardImage} />\r\n                        </div>\r\n                        <div className={classes.gridItemDetailContainer}>\r\n                            <Grid container spacing={8}>\r\n                                <Grid item xs={8} sm={12}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel htmlFor=\"deckId-dropdown\"><FormattedMessage id=\"txtDeck\"/></InputLabel>\r\n                                        <Select\r\n                                            value={this.state.deckId}\r\n                                            onChange={this.handleChange}\r\n                                            inputProps={{\r\n                                                name: 'deckId',\r\n                                                id: 'deckId-dropdown'\r\n                                            }}>\r\n                                            { dmDeckList.map((deck) => <MenuItem key={deck._id} value={deck._id}>{deck.name}</MenuItem>) }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={12}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel htmlFor=\"quantity-dropdown\"><FormattedMessage id=\"txtQuantity\"/></InputLabel>\r\n                                        <Select\r\n                                            value={this.state.quantity}\r\n                                            onChange={this.handleChange}\r\n                                            inputProps={{\r\n                                                name: 'quantity',\r\n                                                id: 'quantity-dropdown'\r\n                                            }}>\r\n                                            <MenuItem value={1}>1</MenuItem>\r\n                                            <MenuItem value={2}>2</MenuItem>\r\n                                            <MenuItem value={3}>3</MenuItem>\r\n                                            <MenuItem value={4}>4</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => handleClose()}><FormattedMessage id=\"btnCancel\"/></Button>\r\n                    <Button onClick={() => { this.submit(card.setId, card.setNumber); this.handleDialogClose();}}><FormattedMessage id=\"btnInsert\"/></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(InsertCardDialog));","/*\r\n * action types\r\n */\r\n\r\nexport const SET_TARGET_CARD = 'SET_TARGET_CARD';\r\nexport const OPEN_CARD_DETAIL_DIALOG = 'OPEN_CARD_DETAIL_DIALOG';\r\nexport const CLOSE_CARD_DETAIL_DIALOG = 'CLOSE_CARD_DETAIL_DIALOG';\r\nexport const OPEN_INSERT_CARD_DIALOG = 'OPEN_INSERT_CARD_DIALOG';\r\nexport const CLOSE_INSERT_CARD_DIALOG = 'CLOSE_INSERT_CARD_DIALOG';\r\nexport const OPEN_DECK_NAME_DIALOG = 'OPEN_DECK_NAME_DIALOG';\r\nexport const CLOSE_DECK_NAME_DIALOG = 'CLOSE_DECK_NAME_DIALOG';\r\nexport const OPEN_FILTER_DIALOG = 'OPEN_FILTER_DIALOG';\r\nexport const CLOSE_FILTER_DIALOG = 'CLOSE_FILTER_DIALOG';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setTargetCard(card)\r\n{\r\n    return {\r\n        type: SET_TARGET_CARD,\r\n        card: card\r\n    }\r\n}\r\n\r\nexport function openCardDetailDialog()\r\n{\r\n    return {\r\n        type: OPEN_CARD_DETAIL_DIALOG\r\n    }\r\n}\r\n\r\nexport function closeCardDetailDialog()\r\n{\r\n    return {\r\n        type: CLOSE_CARD_DETAIL_DIALOG\r\n    }\r\n}\r\n\r\nexport function openinsertCardDialog()\r\n{\r\n    return {\r\n        type: OPEN_INSERT_CARD_DIALOG\r\n    }\r\n}\r\n\r\nexport function closeinsertCardDialog()\r\n{\r\n    return {\r\n        type: CLOSE_INSERT_CARD_DIALOG\r\n    }\r\n}\r\n\r\nexport function openDeckNameDialog()\r\n{\r\n    return {\r\n        type: OPEN_DECK_NAME_DIALOG\r\n    }\r\n}\r\n\r\nexport function closeDeckNameDialog()\r\n{\r\n    return {\r\n        type: CLOSE_DECK_NAME_DIALOG\r\n    }\r\n}\r\n\r\nexport function openFilterDialog()\r\n{\r\n    return {\r\n        type: OPEN_FILTER_DIALOG\r\n    }\r\n}\r\n\r\nexport function closeFilterDialog()\r\n{\r\n    return {\r\n        type: CLOSE_FILTER_DIALOG\r\n    }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Dialog, DialogContent, IconButton, Divider } from '@material-ui/core';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Close, Archive, DeleteSweep } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\nimport imgDialogBackground from '../images/dialog_background.gif';\r\nimport InsertCardDialog from '../dm_components/InsertCardDialog';\r\nimport { closeCardDetailDialog, openinsertCardDialog, closeinsertCardDialog } from '../redux/actions/dmDialogActions';\r\n\r\nconst styles = theme => ({\r\n    dialogTitleBar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        backgroundColor: '#263238'\r\n    },\r\n    dialogTitle: {\r\n        color: '#eeeeee'\r\n    },\r\n    dialogContent: {\r\n        backgroundImage: 'url('+imgDialogBackground+')'\r\n    },\r\n    cardImage: {\r\n        width: '215px'\r\n    },\r\n    civilImage: {\r\n        height: '30px'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    gridContainer: {\r\n        display: 'grid',\r\n        gridGap: '10px',\r\n        marginTop: '25px'\r\n    },\r\n    gridItemImgContainer: {\r\n        textAlign: 'center'\r\n    },\r\n    gridItemDetailContainer: {\r\n        fontFamily: 'Meiryo',\r\n    },\r\n    effectList: {\r\n        listStyleType: 'square'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        gridContainer: {\r\n        gridTemplateColumns: 'auto auto'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showDetailDialog: state.dmDialog.cardDetailDialog,\r\n        showInsertDialog: state.dmDialog.insertCardDialog,\r\n        card: state.dmDialog.targetCard\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeCardDetailDialog: () => {dispatch(closeCardDetailDialog())},\r\n        openinsertCardDialog: () => {dispatch(openinsertCardDialog())},\r\n        closeinsertCardDialog: () => {dispatch(closeinsertCardDialog())}\r\n    };\r\n}\r\n\r\nconst CardDetailDialog = ({classes, showDetailDialog, showInsertDialog, card, \r\n    closeCardDetailDialog, openinsertCardDialog, closeinsertCardDialog, cardAction, rmCardAction}) => {\r\n        if(card === null) return null;\r\n        return (\r\n            <Fragment>\r\n                <Dialog open={showDetailDialog} onClose={() => closeCardDetailDialog()}>\r\n                    <MuiDialogTitle disableTypography className={classes.dialogTitleBar}>\r\n                        <Typography variant=\"h6\" className={classes.dialogTitle}><FormattedMessage id=\"titleCardDetail\"/></Typography>\r\n                        <div className={classes.grow} />\r\n                        { cardAction===\"addToDeck\" && \r\n                            <IconButton color=\"primary\" onClick={() => {closeCardDetailDialog();openinsertCardDialog();}}>\r\n                                <Archive />\r\n                            </IconButton>}\r\n                        { cardAction===\"rmFromDeck\" && \r\n                            <IconButton color=\"primary\" onClick={() => rmCardAction(card)}>\r\n                                <DeleteSweep />\r\n                            </IconButton>}\r\n                        <IconButton color=\"primary\" onClick={() => closeCardDetailDialog()}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </MuiDialogTitle>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        <div className={classes.gridContainer}>\r\n                            <div className={classes.gridItemImgContainer}>\r\n                                <img src={App_Config.dmCardImageLink + card.setId + \"-\" + card.setNumber + \".jpg\"} className={classes.cardImage} />\r\n                            </div>\r\n                            <div className={classes.gridItemDetailContainer}>\r\n                                {card.name} {card.setId.toUpperCase()} {card.setNumber}<br />\r\n                                {card.type} {card.civilizations.map((civil) => <img src={App_Config.cloudfrontImageLink + \"civilizations/\" + civil + \".png\"} className={classes.civilImage}/>)} \r\n                                <img src={App_Config.cloudfrontImageLink + \"rarity/\" + card.rarityCd + \".png\"} /><br />\r\n                                コスト {card.cost} マナ {card.mana} パワー {card.power!==undefined && card.power}<br />\r\n                                {card.races !== undefined && (card.races.map((race) => race))}\r\n                                <Divider light />\r\n                                <ul className={classes.effectList}>\r\n                                    {card.effects.map((effect, index) => <li key={card.setNumber+index}>{effect}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                </Dialog>\r\n                <InsertCardDialog open={showInsertDialog} card={card} handleClose={() => closeinsertCardDialog()}/>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CardDetailDialog));","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\n\r\nconst styles = theme => ({\r\n    cardViewBox: {\r\n        textAlign: 'center',\r\n        padding: '10px'\r\n    },\r\n    cardContent: {\r\n        fontFamily: 'Meiryo',\r\n        fontWeight: 'bold',\r\n        fontSize: '10px',\r\n        marginTop: '5px'\r\n    },\r\n    cardImage: {\r\n        width: '100%',\r\n        maxWidth: '130px',\r\n        height: 'auto'\r\n    },\r\n    cardDetailLink: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        flexBasis: '85px',\r\n        '&:hover': {\r\n            color: '#2bd5c6',\r\n        }\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        cardDetailLink: {\r\n            flexBasis: '115px'\r\n        }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        cardContent: {\r\n            fontSize: '13px'\r\n        },\r\n        cardDetailLink: {\r\n            flexBasis: '145px',\r\n            border: '1px solid white',\r\n            '&:hover': {\r\n                border: '1px solid #2bd5c6',\r\n                borderRadius: '5px'\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nfunction CardView({ classes, card, handleClick }) {\r\n    return (\r\n        <div className={classnames(classes.cardViewBox, classes.cardDetailLink)} onClick={() => handleClick(card)}>\r\n            <img src={App_Config.dmCardImageLink + card.setId + \"-\" + card.setNumber + \".jpg\"} className={classes.cardImage} />\r\n            <div className={classes.cardContent}>\r\n                {card.setId.toUpperCase()} - {card.setNumber}<br />\r\n                {card.name}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CardView);","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    checkBoxImg: {\r\n        maxHeight: '20px',\r\n        verticalAlign: 'middle'\r\n    },\r\n});\r\n\r\nfunction FormControlImage({ classes, control, imgLink }) \r\n{\r\n    return (\r\n        <span>\r\n            {control}\r\n            <img src={imgLink} className={classes.checkBoxImg}/>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(FormControlImage);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormControl, InputLabel, Select, MenuItem, Checkbox, ListItemText, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    selectFormControl: {\r\n        width: '100%'\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    chip: {\r\n        margin: theme.spacing.unit / 4\r\n    },\r\n});\r\n\r\nfunction CheckboxSelect({ classes, controlLabel, name, valueList, selectList, handleSelectChange }) \r\n{\r\n    return (\r\n        <FormControl className={classes.selectFormControl}>\r\n            <InputLabel>{controlLabel}</InputLabel>\r\n            <Select multiple value={valueList}\r\n                renderValue={selected => (\r\n                    <div className={classes.chips}>\r\n                      {selected.map((value, index) => (\r\n                        <Chip key={index} label={value} className={classes.chip} />\r\n                      ))}\r\n                    </div>\r\n                  )}>\r\n                {selectList.map((selectOption, index) =>\r\n                    <MenuItem key={index} value={selectOption}>\r\n                        <Checkbox color=\"primary\" checked={valueList.includes(selectOption)} value={selectOption} onChange={(event, checked) => handleSelectChange(name, event, checked)}/>\r\n                        <ListItemText primary={selectOption} />\r\n                    </MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CheckboxSelect);","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Dialog, DialogContent, IconButton, Grid, Checkbox, FormControl, FormLabel, FormGroup, TextField } from '@material-ui/core';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Save } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { closeFilterDialog } from '../redux/actions/dmDialogActions';\r\nimport FormControlImage from '../ui_components/FormControlImage'\r\nimport CheckboxSelect from '../ui_components/CheckboxSelect'\r\nimport App_Config from '../config/app-config.json';\r\n\r\nconst styles = theme => ({\r\n    dialogTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    minMaxField: {\r\n        margin: '5px 10px'\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showFilterDialog: state.dmDialog.filterDialog,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeFilterDialog: () => {dispatch(closeFilterDialog())}\r\n    };\r\n}\r\n\r\nclass FilterDialog extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { \r\n            ...props.filterOption,\r\n            costMinErrorMsg: '',\r\n            costMaxErrorMsg: '',\r\n            powerMinErrorMsg: '',\r\n            powerMaxErrorMsg: '',\r\n        };\r\n    }\r\n\r\n    handleSelectChange = (originalListName, event, checked) => {\r\n        if(checked) //insert item to list\r\n        {\r\n            this.setState({ [originalListName]: [...this.state[originalListName], event.target.value] });\r\n        }\r\n        else //remove item from list\r\n        {\r\n            this.setState({ [originalListName]: [...this.state[originalListName]].filter((item) => item !== event.target.value) });\r\n        }\r\n    }\r\n\r\n    handleRangeChange = (event) => {\r\n        const { filterCostRange, filterPowerRange} = this.state;\r\n        let value = Number(event.target.value);\r\n        let negErrorMsg = \"Value cannot be negative\";\r\n        let maxErrorMsg = \"Max value cannot smaller min value\";\r\n\r\n        if(event.target.id === \"costMin\")\r\n        {\r\n            this.setState({ filterCostRange: [event.target.value, filterCostRange[1]]});\r\n\r\n            if(value < 0) {\r\n                this.setState({ costMinErrorMsg: negErrorMsg});\r\n            }\r\n        }\r\n        else if(event.target.id === \"costMax\")\r\n        {\r\n            this.setState({ filterCostRange: [filterCostRange[0], event.target.value]});\r\n\r\n            if(value < 0) {\r\n                this.setState({ costMaxErrorMsg: negErrorMsg});\r\n            }\r\n            else if(event.target.value !== \"\" && value < Number(this.state.filterCostRange[0])) {\r\n                this.setState({ costMaxErrorMsg: maxErrorMsg});\r\n            }\r\n        }\r\n        else if(event.target.id === \"powerMin\")\r\n        {\r\n            this.setState({ filterPowerRange: [event.target.value, filterPowerRange[1]]});\r\n\r\n            if(value < 0) {\r\n                this.setState({ powerMinErrorMsg: negErrorMsg});\r\n            }\r\n        }\r\n        else if(event.target.id === \"powerMax\")\r\n        {\r\n            this.setState({ filterPowerRange: [filterPowerRange[0], event.target.value]});\r\n\r\n            if(value < 0) {\r\n                this.setState({ powerMaxErrorMsg: negErrorMsg});\r\n            }\r\n            else if(event.target.value !== \"\" && value < Number(this.state.filterPowerRange[0])) {\r\n                this.setState({ powerMaxErrorMsg: maxErrorMsg});\r\n            }\r\n        }\r\n    }\r\n\r\n    clearError = (event) => {\r\n        if(event.target.id === \"costMin\")\r\n        {\r\n            this.setState({ costMinErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"costMax\")\r\n        {\r\n            this.setState({ costMaxErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"powerMin\")\r\n        {\r\n            this.setState({ powerMinErrorMsg: ''});\r\n        }\r\n        else if(event.target.id === \"powerMax\")\r\n        {\r\n            this.setState({ powerMaxErrorMsg: ''});\r\n        }\r\n    }\r\n\r\n    handleOnClose = () => {\r\n        const { closeFilterDialog, handleFilterChange } = this.props;\r\n        const { costMinErrorMsg, costMaxErrorMsg, powerMinErrorMsg, powerMaxErrorMsg } = this.state;\r\n        if((costMinErrorMsg+costMaxErrorMsg+powerMinErrorMsg+powerMaxErrorMsg) === \"\")\r\n        {\r\n            handleFilterChange(this.state);\r\n            closeFilterDialog();\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { classes, showFilterDialog, raceList, cardTypeList } = this.props;\r\n        const { filterRace, filterCardType, filterCivil, filterRarity, filterCostRange, filterPowerRange, \r\n            costMinErrorMsg, costMaxErrorMsg, powerMinErrorMsg, powerMaxErrorMsg} = this.state;\r\n\r\n        let civilList = [\"火\",\"水\",\"自然\",\"光\",\"闇\"];\r\n        let rarityList = [\"SR\", \"VR\", \"R\", \"U\", \"C\"];\r\n\r\n        return(\r\n            <Dialog open={showFilterDialog} onClose={() => this.handleOnClose()}>\r\n                <MuiDialogTitle disableTypography className={classes.dialogTitle}>\r\n                    <Typography variant=\"h6\"><FormattedMessage id=\"titleFilterOptions\"/></Typography>\r\n                    <div className={classes.grow} />\r\n                    <IconButton color=\"secondary\" onClick={() => this.handleOnClose()}>\r\n                        <Save />\r\n                    </IconButton>\r\n                </MuiDialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={24}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <CheckboxSelect controlLabel={<FormattedMessage id=\"txtRace\" />} name=\"filterRace\" valueList={filterRace} selectList={raceList} handleSelectChange={this.handleSelectChange}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                            <CheckboxSelect controlLabel={<FormattedMessage id=\"txtCardType\" />} name=\"filterCardType\" valueList={filterCardType} selectList={cardTypeList} handleSelectChange={this.handleSelectChange}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl>\r\n                                <FormLabel><FormattedMessage id=\"txtCivilization\"/></FormLabel>\r\n                                <FormGroup row>\r\n                                    { civilList.map((civil, index) => \r\n                                        <FormControlImage key={index} control={<Checkbox color=\"primary\" checked={filterCivil.includes(civil)} value={civil} onChange={(event, checked) => this.handleSelectChange(\"filterCivil\", event, checked)} />} imgLink={ App_Config.cloudfrontImageLink + \"civilizations/\" + civil + \".png\" }/> ) } \r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl>\r\n                                <FormLabel><FormattedMessage id=\"txtRarity\"/></FormLabel>\r\n                                <FormGroup row>\r\n                                    { rarityList.map((rarity) => \r\n                                        <FormControlImage key={rarity} control={<Checkbox color=\"primary\" checked={filterRarity.includes(rarity)} value={rarity} onChange={(event, checked) => this.handleSelectChange(\"filterRarity\", event, checked)} />} imgLink={ App_Config.cloudfrontImageLink + \"rarity/\" + rarity + \".png\" }/> ) }\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl>\r\n                                <FormLabel><FormattedMessage id=\"txtCost\"/></FormLabel>\r\n                                <FormGroup row>\r\n                                    <TextField\r\n                                        className={classes.minMaxField}\r\n                                        id=\"costMin\"\r\n                                        label={<FormattedMessage id=\"txtMin\"/>}\r\n                                        value={filterCostRange[0]}\r\n                                        type=\"number\"\r\n                                        error={costMinErrorMsg !== \"\"}\r\n                                        helperText={costMinErrorMsg}\r\n                                        onInput={(e) => this.clearError(e)}\r\n                                        onChange={(e) => this.handleRangeChange(e)} />\r\n                                    <TextField\r\n                                        className={classes.minMaxField}\r\n                                        id=\"costMax\"\r\n                                        label={<FormattedMessage id=\"txtMax\"/>}\r\n                                        value={filterCostRange[1]}\r\n                                        type=\"number\"\r\n                                        error={costMaxErrorMsg !== \"\"}\r\n                                        helperText={costMaxErrorMsg}\r\n                                        onInput={(e) => this.clearError(e)}\r\n                                        onChange={(e) => this.handleRangeChange(e)} />\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl>\r\n                                <FormLabel><FormattedMessage id=\"txtPower\"/></FormLabel>\r\n                                <FormGroup row>\r\n                                    <TextField\r\n                                        className={classes.minMaxField}\r\n                                        id=\"powerMin\"\r\n                                        label={<FormattedMessage id=\"txtMin\"/>}\r\n                                        value={filterPowerRange[0]}\r\n                                        type=\"number\"\r\n                                        error={powerMinErrorMsg !== \"\"}\r\n                                        helperText={powerMinErrorMsg}\r\n                                        onInput={(e) => this.clearError(e)}\r\n                                        onChange={(e) => this.handleRangeChange(e)} />\r\n                                    <TextField\r\n                                        className={classes.minMaxField}\r\n                                        id=\"powerMax\"\r\n                                        label={<FormattedMessage id=\"txtMax\"/>}\r\n                                        value={filterPowerRange[1]}\r\n                                        type=\"number\"\r\n                                        error={powerMaxErrorMsg !== \"\"}\r\n                                        helperText={powerMaxErrorMsg}\r\n                                        onInput={(e) => this.clearError(e)}\r\n                                        onChange={(e) => this.handleRangeChange(e)} />\r\n                                </FormGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FilterDialog));","import React, { Component } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { Popover, RadioGroup, FormControl , FormControlLabel, Radio } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        margin: theme.spacing.unit * 3,\r\n    },\r\n    radio: {\r\n        color: '#232E33',\r\n        '&$checked': {\r\n            color: '#263238'\r\n        }\r\n    },\r\n    checked: {}\r\n});\r\n\r\n class SortMenu extends Component\r\n{\r\n    render() \r\n    {\r\n        const { classes, defaultSelect, sortMenuAnchorEl, handleSortMenuClose, handleSelectChange } = this.props;\r\n\r\n        return (\r\n            <Popover\r\n                id=\"sortMenu\"\r\n                anchorEl={sortMenuAnchorEl}\r\n                open={Boolean(sortMenuAnchorEl)}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                onClose={() => handleSortMenuClose()}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <RadioGroup \r\n                            name=\"cardSortMenu\" \r\n                            value={defaultSelect} \r\n                            onChange={(e) => { handleSelectChange(e.target.value);handleSortMenuClose(); }}>\r\n                            <FormControlLabel value=\"default\" control={<Radio classes={{root: classes.radio, checked: classes.checked}} />} label={<FormattedMessage id=\"txtSortDefault\"/>} />\r\n                            <FormControlLabel value=\"costLH\" control={<Radio classes={{root: classes.radio, checked: classes.checked}}/>} label={<FormattedMessage id=\"txtSortCostLH\"/>} />\r\n                            <FormControlLabel value=\"costHL\" control={<Radio classes={{root: classes.radio, checked: classes.checked}}/>} label={<FormattedMessage id=\"txtSortCostHL\"/>} />\r\n                            <FormControlLabel value=\"powerLH\" control={<Radio classes={{root: classes.radio, checked: classes.checked}}/>} label={<FormattedMessage id=\"txtSortPowerLH\"/>} />\r\n                            <FormControlLabel value=\"powerHL\" control={<Radio classes={{root: classes.radio, checked: classes.checked}}/>} label={<FormattedMessage id=\"txtSortPowerHL\"/>} />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n             </Popover>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SortMenu);","function sortList(defaultCardList, cardList, option)\r\n{\r\n    // the sort method will mutate the original array\r\n    // make a new copy of the list and apply sorting to the new list\r\n    switch(option)\r\n    {\r\n        case \"default\":\r\n            return defaultCardList;\r\n        case \"costLH\":\r\n            return cardList.slice().sort((first, second) => first.cost-second.cost);\r\n        case \"costHL\":\r\n            return cardList.slice().sort((first, second) => second.cost-first.cost);\r\n        case \"powerLH\":\r\n            return cardList.slice().sort((first, second) => first.power-second.power);\r\n        case \"powerHL\":\r\n            return cardList.slice().sort((first, second) => second.power-first.power);\r\n        default:\r\n            return cardList;\r\n    }\r\n}\r\n\r\nfunction filterList(cardList, filterOption)\r\n{\r\n    let checkSingleCode = (code, codeList) => {\r\n        return codeList.length === 0 || codeList.includes(code);\r\n    };\r\n\r\n    let checkMultiCode = (codes, codeList) => {\r\n        if(codeList.length === 0) return true; // nothing is specified in filter\r\n        if(codes === undefined || codes.length === 0) return false; // nothing to check\r\n\r\n        // if we do 'return codeList.includes(codes[index])' directly, process won't check further the list\r\n        let index;\r\n        for(index = 0; index < codes.length; ++index)\r\n        {\r\n            if(codeList.includes(codes[index])) return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    let checkRange = (value, range) => {\r\n        if((range[0] + range[1]) === \"\") return true; // range is not specified\r\n        \r\n        if(range[0] === \"\") return value <= Number(range[1]); // at most range[1]\r\n\r\n        if(range[1] === \"\") return value >= Number(range[0]); // at least range[0]\r\n\r\n        return value >= Number(range[0]) && value <= Number(range[1]); // between range[0] and range[1]\r\n    };\r\n\r\n    return cardList.filter(card => checkSingleCode(card.type, filterOption.filterCardType)) // filter by card type first\r\n        .filter(card => checkSingleCode(card.rarityCd, filterOption.filterRarity)) // filter by rarity\r\n        .filter(card => checkRange(card.cost, filterOption.filterCostRange)) // filter by cost\r\n        .filter(card => checkRange(card.power, filterOption.filterPowerRange)) // filter by power\r\n        .filter(card => checkMultiCode(card.civilizations, filterOption.filterCivil)) // filter by civilization\r\n        .filter(card => checkMultiCode(card.races, filterOption.filterRace));  // filter by race\r\n}\r\n\r\nexport { sortList, filterList }","import React, { Component, Fragment } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton, AppBar, Toolbar, LinearProgress } from '@material-ui/core';\r\nimport { Sort, FilterList, Edit } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport CardDetailDialog from '../dm_components/CardDetailDialog';\r\nimport DeckNameDialog from '../dm_components/DeckNameDialog';\r\nimport CardView from '../dm_components/CardView';\r\nimport GridView from '../ui_components/GridView';\r\nimport FilterDialog from '../dm_components/FilterDialog';\r\nimport SortMenu from '../dm_components/SortMenu';\r\nimport { sortList, filterList } from '../utils/cardListModifier';\r\nimport { setTargetCard, openCardDetailDialog, openDeckNameDialog, closeDeckNameDialog, openFilterDialog } from '../redux/actions/dmDialogActions';\r\n\r\nconst styles = theme => ({\r\n    flexColumnBox: {\r\n      display: 'flex',\r\n      flexFlow: 'column',\r\n      height: '100%'\r\n    },\r\n    gridWrapper: {\r\n      height: '100%'\r\n    },\r\n    firstColumn: {\r\n      display: 'flex',\r\n      flexFlow: 'column'\r\n    },\r\n    secondColumn: {\r\n      display: 'grid'\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    gridTitle: {\r\n      fontWeight: 'bold'\r\n    },\r\n    topFab: {\r\n      position: 'fixed',\r\n      right: theme.spacing.unit * 2,\r\n      bottom: theme.spacing.unit * 2\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      firstColumn: {\r\n        gridTemplateRows: 'auto'\r\n      },\r\n      secondColumn: {\r\n        gridTemplateRows: 'auto'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        apiCallStatus: state.uiEvents.apiCallStatus,\r\n        showdeckNameDialog: state.dmDialog.deckNameDialog,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setTargetCard: (card) => {dispatch(setTargetCard(card))},\r\n        openCardDetailDialog: () => {dispatch(openCardDetailDialog())},\r\n        openDeckNameDialog: () => {dispatch(openDeckNameDialog())},\r\n        closeDeckNameDialog: () => {dispatch(closeDeckNameDialog())},\r\n        openFilterDialog: () => {dispatch(openFilterDialog())},\r\n    };\r\n}\r\n\r\nclass CardGrid extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            originalCardList: props.originalCardList,\r\n            displayCardList: props.originalCardList,\r\n            raceList: this.getRaceList(props.originalCardList),\r\n            cardTypeList: this.getCardTypeList(props.originalCardList),\r\n            sortOption: 'default',\r\n            showSortMenu : null,\r\n            showDeckNameDialog: false\r\n        };\r\n    }\r\n\r\n    // this function won't triggered in Deck Editor\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        const { originalCardList } = this.props;\r\n        if(originalCardList.length !== prevProps.originalCardList.length)\r\n        {\r\n            this.setState({ originalCardList: originalCardList, displayCardList: originalCardList });\r\n            this.setState({ raceList: this.getRaceList(originalCardList), cardTypeList: this.getCardTypeList(originalCardList) });\r\n        }\r\n    }\r\n\r\n    getRaceList = (originalCardList) => {\r\n        if(originalCardList.length === 0) return []; \r\n        let array = [];\r\n        originalCardList.forEach((card) => {\r\n            if(card.races !== undefined) // filter out all non-creature cards\r\n            {\r\n                (card.races).forEach((race) => {\r\n                    if(!array.includes(race))\r\n                    {\r\n                        array.push(race)\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n        return array.sort();\r\n    }\r\n\r\n    getCardTypeList = (originalCardList) => {\r\n        if(originalCardList.length === 0) return []; \r\n        let array = [];\r\n        originalCardList.forEach((card) => {\r\n            if(!array.includes(card.type))\r\n            {\r\n                array.push(card.type)\r\n            }\r\n        });\r\n\r\n        return array;\r\n    }\r\n\r\n    handleFilterChange = (filterOption) => {\r\n        const { originalCardList, sortOption } = this.state;\r\n        let filteredList = filterList( originalCardList, filterOption );\r\n        this.setState({ displayCardList: sortList(filteredList, filteredList, sortOption)});\r\n    }\r\n\r\n    handleSortSelectChange = (option) => {\r\n        const { originalCardList, displayCardList } = this.state;\r\n        this.setState({ sortOption: option, displayCardList: sortList( originalCardList, displayCardList, option ) });\r\n    }\r\n\r\n    render() \r\n    {\r\n        const { classes, apiCallStatus, showdeckNameDialog, \r\n            setTargetCard, openCardDetailDialog, openDeckNameDialog, closeDeckNameDialog, openFilterDialog,\r\n            gridTitle, titleEditable, editDeckNameFunc, cardAction, removeCardFunc } = this.props;\r\n        const { displayCardList, raceList, cardTypeList, showSortMenu, sortOption } = this.state;\r\n\r\n        let iniFilterOption = {\r\n            filterRace: [],\r\n            filterCardType: [],\r\n            filterCivil: [],\r\n            filterRarity: [],\r\n            filterCostRange: [\"\",\"\"],\r\n            filterPowerRange: [\"\",\"\"]\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\" className={classes.gridTitle}>{gridTitle}</Typography>\r\n                    {titleEditable && <IconButton color=\"secondary\" onClick={() => openDeckNameDialog()}>\r\n                        <Edit />\r\n                    </IconButton>}\r\n                    <div className={classes.grow} />\r\n                    <IconButton color=\"secondary\" disabled={apiCallStatus===\"started\"}>\r\n                        <FilterList onClick={() => openFilterDialog()}/>\r\n                    </IconButton>\r\n                    <IconButton color=\"secondary\" disabled={apiCallStatus===\"started\"}>\r\n                        <Sort onClick={(e) => this.setState({ showSortMenu: e.currentTarget})}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n                </AppBar>\r\n                { apiCallStatus===\"started\" && <LinearProgress /> }\r\n                <GridView>\r\n                    { displayCardList.map((card, index) => <CardView key={card._id+index} card={card} handleClick={(card) => {setTargetCard(card); openCardDetailDialog()}}/>) } \r\n                </GridView>\r\n                <SortMenu sortMenuAnchorEl={showSortMenu} \r\n                    defaultSelect={sortOption}\r\n                    handleSelectChange={this.handleSortSelectChange}\r\n                    handleSortMenuClose={() => this.setState({ showSortMenu: null})} />\r\n                <FilterDialog\r\n                    filterOption={iniFilterOption}\r\n                    raceList={raceList}\r\n                    cardTypeList={cardTypeList}\r\n                    handleFilterChange={this.handleFilterChange} />\r\n                <CardDetailDialog cardAction={cardAction} rmCardAction={removeCardFunc}/>\r\n                <DeckNameDialog open={showdeckNameDialog} titleId=\"titleRenameDeck\" handleDeckName={editDeckNameFunc} closeDialog={() => closeDeckNameDialog()}/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CardGrid));","import React, { Component, Fragment } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fab } from '@material-ui/core';\r\nimport { Delete, Save, DeleteSweep, AddToPhotos } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport { getPlayerDeck, updatePlayerDecks, deletePlayerDeck } from '../redux/actions/dmDeckActions';\r\nimport ConfirmDialog from '../dm_components/ConfirmDialog';\r\nimport CardGrid from '../dm_components/CardGrid';\r\nimport { closeCardDetailDialog } from '../redux/actions/dmDialogActions';\r\n\r\n\r\nconst styles = theme => ({\r\n    flexColumnBox: {\r\n      display: 'flex',\r\n      flexFlow: 'column',\r\n      height: '100%'\r\n    },\r\n    gridWrapper: {\r\n      height: '100%'\r\n    },\r\n    firstColumn: {\r\n      display: 'flex',\r\n      flexFlow: 'column'\r\n    },\r\n    secondColumn: {\r\n      display: 'grid'\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    gridTitle: {\r\n      fontWeight: 'bold'\r\n    },\r\n    saveFab: {\r\n      position: 'fixed',\r\n      right: theme.spacing.unit * 2,\r\n      bottom: theme.spacing.unit * 2\r\n    },\r\n    deleteFab: {\r\n        position: 'fixed',\r\n        right: theme.spacing.unit * 4 + 56,\r\n        bottom: theme.spacing.unit * 2\r\n    },\r\n    insertCardFab: {\r\n        position: 'fixed',\r\n        right: theme.spacing.unit * 6 + 112,\r\n        bottom: theme.spacing.unit * 2\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      firstColumn: {\r\n        gridTemplateRows: 'auto'\r\n      },\r\n      secondColumn: {\r\n        gridTemplateRows: 'auto'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmDeck: state.dmDeckList[0],\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeCardDetailDialog: () => {dispatch(closeCardDetailDialog())},\r\n    getPlayerDeck: (deckId) => {dispatch(getPlayerDeck(deckId))},\r\n    updatePlayerDecks: (deckObject) => {dispatch(updatePlayerDecks(deckObject._id, deckObject))},\r\n    deletePlayerDeck: (deckId) => {dispatch(deletePlayerDeck(deckId))}\r\n  };\r\n}\r\n\r\nclass DeckEditor extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state = {\r\n        card: null,\r\n        cachedDeck: null,\r\n        showConfirmDialog: false\r\n      };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    const { location, getPlayerDeck } = this.props;\r\n    getPlayerDeck(location.state.deckId);\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    const { cachedDeck } = this.state;\r\n    const { dmDeck } = this.props;\r\n    if(cachedDeck === null && dmDeck !== undefined)\r\n    {\r\n      this.setState({ cachedDeck: dmDeck });\r\n    }\r\n  }\r\n\r\n  editDeckName = (deckName) => {\r\n    const { cachedDeck } = this.state;\r\n    let newDeck = { ...cachedDeck };\r\n    newDeck.name = deckName;\r\n    this.setState({ cachedDeck: newDeck });\r\n  }\r\n\r\n  removeCardFromDeck = (removingCard) => {\r\n    const { closeCardDetailDialog } = this.props;\r\n    const { cachedDeck } = this.state;\r\n    let newDeck = { ...cachedDeck };\r\n    newDeck.cards = cachedDeck.cards.filter(card => card !== removingCard);\r\n    this.setState({ cachedDeck: newDeck });\r\n    closeCardDetailDialog();\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, updatePlayerDecks, deletePlayerDeck } = this.props;\r\n    const { cachedDeck, showConfirmDialog } = this.state;\r\n\r\n    if(cachedDeck===null) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <CardGrid \r\n          gridTitle={cachedDeck.name}\r\n          titleEditable={true}\r\n          originalCardList={cachedDeck.cards}\r\n          cardAction=\"rmFromDeck\"\r\n          removeCardFunc={this.removeCardFromDeck}\r\n          editDeckNameFunc={this.editDeckName} />\r\n        <Link to={{ pathname: '/productGallery' }}>\r\n          <Fab color=\"primary\" className={classes.insertCardFab}>\r\n            <AddToPhotos />\r\n          </Fab>\r\n        </Link>\r\n        <Fab color=\"primary\" className={classes.deleteFab} onClick={() => this.setState({showConfirmDialog: true})}>\r\n          <Delete />\r\n        </Fab>\r\n        <Fab color=\"primary\" className={classes.saveFab} onClick={() => {updatePlayerDecks(cachedDeck);this.props.history.push('/deckManager');}}>\r\n          <Save />\r\n        </Fab>\r\n        <ConfirmDialog open={showConfirmDialog}\r\n          dialogTitle={<FormattedMessage id=\"titleRemoveDeck\"/>}\r\n          dialogMessage={<FormattedMessage id=\"txtRemoveDeckWarn\"/>}\r\n          closeDialog={() => this.setState({showConfirmDialog: false})}\r\n          submitButtonText={<FormattedMessage id=\"btnRemove\"/>}\r\n          submitAction={() => {deletePlayerDeck(cachedDeck._id);this.props.history.push('/deckManager');}}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(DeckEditor)));","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport App_Config from '../config/app-config.json';\r\n\r\nconst styles = theme => ({\r\n    productViewBox: {\r\n        textAlign: 'center',\r\n        padding: '10px',\r\n    },\r\n    productContent: {\r\n        fontFamily: 'Meiryo',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        marginTop: '5px'\r\n    },\r\n    productImage: {\r\n        width: '100%',\r\n        maxWidth: '150px',\r\n        height: 'auto'\r\n    },\r\n    cardGalleryLink: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        flexBasis: '150px',\r\n        '&:hover': {\r\n            color: '#2bd5c6',\r\n        }\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        cardGalleryLink: {\r\n            flexBasis: '155px',\r\n            border: '1px solid white',\r\n            '&:hover': {\r\n                color: '#2bd5c6',\r\n                border: '1px solid #2bd5c6',\r\n                borderRadius: '5px'\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nfunction ProductView({ classes, product, productType }) {\r\n    return (\r\n        <Link className={classes.cardGalleryLink} to={{ pathname: '/cardGallery', \r\n        state: { \r\n            action: (productType === \"startDeck\")? \"getPlayerDeck\": \"getCardsBySetId\", \r\n            title: parseSetId(product.setId) + \" \" + (product.seriesName !== undefined?product.seriesName + \" \":\"\") + (product.seriesNumber !== undefined?product.seriesNumber + \" \":\"\") + product.name, \r\n            primaryId: (productType === \"startDeck\")? product._id: product.setId} }}>\r\n            <div className={classes.productViewBox}>\r\n                <img src={App_Config.cloudfrontImageLink + \"products/\" + product.setId + \".jpg\"} className={classes.productImage} />\r\n                <div className={classes.productContent}>\r\n                    {parseSetId(product.setId)}<br />\r\n                    {(product.seriesName !== undefined && product.seriesNumber !== undefined)? <div>{product.seriesName}  {product.seriesNumber}</div>: null}\r\n                    {product.name}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nfunction parseSetId(setId)\r\n{\r\n    var setCode = setId.split(/[0-9]/)[0];\r\n    var setNumber = setId.split(/^[a-zA-Z]+/)[1];\r\n    return setCode.toLocaleUpperCase() + \"-\" + setNumber;\r\n}\r\n\r\nexport default withStyles(styles)(ProductView);","import { API } from 'aws-amplify';\r\nimport { startAPICall, finishAPICall } from './uiEventActions'\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const FILTER_BOOSTER_PACK_LIST = 'FILTER_BOOSTER_PACK_LIST';\r\nexport const FILTER_STARTER_DECK_LIST = 'FILTER_STARTER_DECK_LIST';\r\nexport const FILTER_PROMO_CARD_LIST = 'FILTER_PROMO_CARD_LIST';\r\nexport const GET_BOOSTER_PACK_LIST = 'GET_BOOSTER_PACK_LIST';\r\nexport const GET_STARTER_DECK_LIST = 'GET_STARTER_DECK_LIST';\r\nexport const GET_PROMO_CARD_LIST = 'GET_PROMO_CARD_LIST';\r\nexport const RECEIVE_BOOSTER_PACK_LIST = 'RECEIVE_BOOSTER_PACK_LIST';\r\nexport const RECEIVE_STARTER_DECK_LIST = 'RECEIVE_STARTER_DECK_LIST';\r\nexport const RECEIVE_PROMO_CARD_LIST = 'RECEIVE_PROMO_CARD_LIST';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function getBoosterPack()\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.get(\"Duel Masters API\", \"boosterPacks/\")\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveBoosterPack(response));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nfunction receiveBoosterPack(json)\r\n{\r\n    return {\r\n        type: RECEIVE_BOOSTER_PACK_LIST,\r\n        boosterPacks: json\r\n    }\r\n}\r\n\r\nexport function filterBoosterPack(filter_text)\r\n{\r\n    return {type: FILTER_BOOSTER_PACK_LIST, filterText: filter_text};\r\n}\r\n\r\nexport function getStarterDeck()\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        return API.get(\"Duel Masters API\", \"starterDecks/\")\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveStarterDeck(response));\r\n            })\r\n        };\r\n}\r\n\r\nfunction receiveStarterDeck(json)\r\n{\r\n    return {\r\n        type: RECEIVE_STARTER_DECK_LIST,\r\n        starterDecks: json\r\n    }\r\n}\r\n\r\nexport function filterStarterDeck(filter_text)\r\n{\r\n    return {type: FILTER_STARTER_DECK_LIST, filterText: filter_text};\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Grid, Toolbar, Button, LinearProgress, Fab } from '@material-ui/core';\r\nimport { ArrowUpward } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport GridView from '../ui_components/GridView';\r\nimport ProductView from '../dm_components/ProductView';\r\nimport { getBoosterPack, getStarterDeck } from '../redux/actions/dmProductActions'\r\n\r\nconst styles = theme => ({\r\n  appBarButtonWrapper: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto auto auto'\r\n  },\r\n  topFab: {\r\n    position: 'fixed',\r\n    right: theme.spacing.unit * 2,\r\n    bottom: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmProductList: state.dmProductList,\r\n    apiCallStatus: state.uiEvents.apiCallStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getBoosterPack: () => {dispatch(getBoosterPack())},\r\n    getStarterDeck: () => {dispatch(getStarterDeck())},\r\n  };\r\n}\r\n\r\nclass ProductGallery extends Component \r\n{\r\n  constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            productType: \"\"\r\n        };\r\n    }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.getDmProduct(\"boosterPack\");\r\n  }\r\n\r\n  getDmProduct = productType => {\r\n    const { getBoosterPack, getStarterDeck } = this.props;\r\n    this.setState({productType: productType});\r\n    switch(productType)\r\n    {\r\n      case \"boosterPack\":\r\n        getBoosterPack();\r\n        break;\r\n      case \"startDeck\":\r\n        getStarterDeck();\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, dmProductList, apiCallStatus } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\" color=\"default\">\r\n            <Toolbar>\r\n              <Grid container justify=\"space-between\" spacing={8}>\r\n                <Grid item xs={12} sm={5} className={classes.appBarButtonWrapper}>\r\n                  <Button onClick={() => this.getDmProduct(\"boosterPack\")}><FormattedMessage id=\"txtBoosterPacks\"/></Button>\r\n                  <Button onClick={() => this.getDmProduct(\"startDeck\")}><FormattedMessage id=\"txtStarterDecks\"/></Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          { apiCallStatus===\"started\" && <LinearProgress /> }\r\n          <GridView>\r\n              { dmProductList.map((product) => <ProductView key={product._id} product={product} productType={this.state.productType}/>) }\r\n          </GridView>\r\n          <Fab color=\"primary\" className={classes.topFab}>\r\n            <ArrowUpward />\r\n          </Fab>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProductGallery));","import { API } from 'aws-amplify';\r\nimport { startAPICall, finishAPICall } from './uiEventActions'\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const GET_CARDS_BY_SET_ID = 'GET_CARDS_BY_SET_ID';\r\nexport const GET_CARDS_BY_DECK_ID = 'GET_CARDS_BY_DECK_ID';\r\nexport const RECEIVE_CARDS = 'RECEIVE_CARDS';\r\nexport const RESET_CARD_LIST = 'RESET_CARD_LIST';\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nfunction resetCardList()\r\n{\r\n    return {\r\n        type: RESET_CARD_LIST\r\n    }\r\n}\r\n\r\nexport function getCardsBySetId(setId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetCardList());\r\n        return API.get(\"Duel Masters API\", \"cards/\" + setId)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveCards(response));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nexport function getCardsByDeckId(deckId)\r\n{\r\n    return function (dispatch) {\r\n        dispatch(startAPICall());\r\n        dispatch(resetCardList());\r\n        return API.get(\"Duel Masters API\", \"playerDecks/\" + deckId)\r\n            .then(response => {\r\n                dispatch(finishAPICall());\r\n                dispatch(receiveCards(response[0].cards));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        };\r\n}\r\n\r\nfunction receiveCards(json)\r\n{\r\n    return {\r\n        type: RECEIVE_CARDS,\r\n        cards: json\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\nimport { Fab  } from '@material-ui/core';\r\nimport { ArrowUpward } from '@material-ui/icons';\r\nimport { connect } from 'react-redux';\r\nimport { getCardsBySetId, getCardsByDeckId } from '../redux/actions/dmCardActions';\r\nimport CardGrid from '../dm_components/CardGrid';\r\n\r\nconst styles = theme => ({\r\n    flexColumnBox: {\r\n      display: 'flex',\r\n      flexFlow: 'column',\r\n      height: '100%'\r\n    },\r\n    gridWrapper: {\r\n      height: '100%'\r\n    },\r\n    firstColumn: {\r\n      display: 'flex',\r\n      flexFlow: 'column'\r\n    },\r\n    secondColumn: {\r\n      display: 'grid'\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    gridTitle: {\r\n      fontWeight: 'bold'\r\n    },\r\n    topFab: {\r\n      position: 'fixed',\r\n      right: theme.spacing.unit * 2,\r\n      bottom: theme.spacing.unit * 2\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      firstColumn: {\r\n        gridTemplateRows: 'auto'\r\n      },\r\n      secondColumn: {\r\n        gridTemplateRows: 'auto'\r\n      }\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dmCardList: state.dmCardList\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCardsBySetId: (setId) => {dispatch(getCardsBySetId(setId))},\r\n    getCardsByDeckId: (deckId) => {dispatch(getCardsByDeckId(deckId))}\r\n  };\r\n}\r\n\r\nclass CardGallery extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state = {\r\n        originCardList: [],\r\n        cachedCardList: [],\r\n        showInsertCardDialog : false\r\n      };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    const { location } = this.props;\r\n    switch(location.state.action)\r\n    {\r\n      case \"getCardsBySetId\":\r\n        this.props.getCardsBySetId(location.state.primaryId);\r\n        break;\r\n      case \"getPlayerDeck\":\r\n        this.props.getCardsByDeckId(location.state.primaryId);\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    const { cachedCardList } = this.state;\r\n    const { dmCardList } = this.props;\r\n    if(cachedCardList.length === 0 && dmCardList.length > 0)\r\n    {\r\n      this.setState({ cachedCardList: dmCardList, originCardList: dmCardList });\r\n    }\r\n  }\r\n\r\n  handleInsertCardDialogClose = () => {\r\n    this.setState({ showInsertCardDialog: false, card: null });\r\n  }\r\n\r\n  render() \r\n  {\r\n    const { classes, location, dmCardList } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <CardGrid \r\n          gridTitle={location.state.title}\r\n          titleEditable={false}\r\n          originalCardList={dmCardList}\r\n          cardAction=\"addToDeck\"/>\r\n        <Fab color=\"primary\" className={classes.topFab} onClick={() => window.scrollTo(0,0)}>\r\n          <ArrowUpward />\r\n        </Fab>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(withStyles(styles)(CardGallery)));","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport DmAuthenticator from '../authentication/DmAuthenticator';\nimport PrivateRoute from './PrivateRoute';\nimport DeckManager from '../pages/DeckManager';\nimport DeckEditor from '../pages/DeckEditor';\nimport ProductGallery from '../pages/ProductGallery';\nimport CardGallery from '../pages/CardGallery';\n\nfunction DmRouter({changeLanguage})\n{\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/auth' component={DmAuthenticator} />\n        <PrivateRoute exact path='/' component={DeckManager} titleId=\"titleDeckManager\" changeLanguage={changeLanguage}/>\n        <PrivateRoute path='/deckManager' component={DeckManager} titleId=\"titleDeckManager\" changeLanguage={changeLanguage}/>\n        <PrivateRoute path='/deckEditor' component={DeckEditor} titleId=\"titleDeckEditor\" changeLanguage={changeLanguage}/>\n        <PrivateRoute path='/productGallery' component={ProductGallery} titleId=\"titleProductGallery\" changeLanguage={changeLanguage}/>\n        <PrivateRoute path='/cardGallery' component={CardGallery} titleId=\"titleCardGallery\" changeLanguage={changeLanguage}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default DmRouter;\n","import React, { Component } from 'react';\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport en from 'react-intl/locale-data/en';\r\nimport ja from 'react-intl/locale-data/ja';\r\nimport zh from 'react-intl/locale-data/zh';\r\n\r\nimport intlMessagesEN from './en.json';\r\nimport intlMessagesZH from './zh.json';\r\nimport intlMessagesJA from './ja.json';\r\n\r\nconst intlMessageMap = {\r\n    en: intlMessagesEN,\r\n    zh: intlMessagesZH,\r\n    ja: intlMessagesJA\r\n};\r\n\r\nclass DmIntlProvider extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        addLocaleData([...en,...zh,...ja]);\r\n        let defaultLangCode = localStorage.getItem('langCode');\r\n        this.state = {\r\n            locale: (defaultLangCode===null)?'en':defaultLangCode\r\n        };\r\n    }\r\n\r\n    changeLanguage = (langCode) => {\r\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"lang\", langCode);\r\n        this.setState({ locale: langCode });\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { locale } = this.state;\r\n        return(\r\n            <IntlProvider locale={ locale } messages={intlMessageMap[locale]}>\r\n                {React.cloneElement(this.props.children, { changeLanguage: this.changeLanguage })}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DmIntlProvider;","import { RECEIVE_BOOSTER_PACK_LIST, RECEIVE_STARTER_DECK_LIST } from '../actions/dmProductActions'\r\n\r\nconst dmProductReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case RECEIVE_BOOSTER_PACK_LIST:\r\n            return action.boosterPacks;\r\n        case RECEIVE_STARTER_DECK_LIST:\r\n            return action.starterDecks;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dmProductReducer;","import { START_API_CALL, FINISH_API_CALL, FINISH_API_ERR } from '../actions/uiEventActions'\r\n\r\nconst uiEventReducer = (state = {}, action) => {\r\n    switch (action.type)\r\n    {\r\n        case START_API_CALL:\r\n            return {...state, apiCallStatus: \"started\"};\r\n        case FINISH_API_CALL:\r\n            return {...state, apiCallStatus: \"finished\"};\r\n        case FINISH_API_ERR:\r\n            return {...state, apiCallStatus: \"error\", deckAPIErrMsg: action.message};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default uiEventReducer;","import { SET_TARGET_CARD, \r\n    OPEN_CARD_DETAIL_DIALOG, CLOSE_CARD_DETAIL_DIALOG, \r\n    OPEN_INSERT_CARD_DIALOG, CLOSE_INSERT_CARD_DIALOG,\r\n    OPEN_DECK_NAME_DIALOG, CLOSE_DECK_NAME_DIALOG,\r\n    OPEN_FILTER_DIALOG, CLOSE_FILTER_DIALOG } from '../actions/dmDialogActions'\r\n\r\nconst dmDialogReducer = (state = { targetCard: null, cardDetailDialog: false,\r\n    insertCardDialog: false, deckNameDialog: false, filterDialog: false }, action) => {\r\n    switch (action.type)\r\n    {\r\n        case SET_TARGET_CARD:\r\n            return {...state, targetCard: action.card};\r\n        case OPEN_CARD_DETAIL_DIALOG:\r\n            return {...state, cardDetailDialog: true};\r\n        case CLOSE_CARD_DETAIL_DIALOG:\r\n            return {...state, cardDetailDialog: false};\r\n        case OPEN_INSERT_CARD_DIALOG:\r\n            return {...state, insertCardDialog: true};\r\n        case CLOSE_INSERT_CARD_DIALOG:\r\n            return {...state, insertCardDialog: false};\r\n        case OPEN_DECK_NAME_DIALOG:\r\n            return {...state, deckNameDialog: true};\r\n        case CLOSE_DECK_NAME_DIALOG:\r\n            return {...state, deckNameDialog: false};\r\n        case OPEN_FILTER_DIALOG:\r\n            return {...state, filterDialog: true};\r\n        case CLOSE_FILTER_DIALOG:\r\n            return {...state, filterDialog: false};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dmDialogReducer;","import { RECEIVE_CARDS, RESET_CARD_LIST } from '../actions/dmCardActions'\r\n\r\nconst dmCardReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case RECEIVE_CARDS:\r\n            return action.cards;\r\n        case RESET_CARD_LIST:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dmCardReducer;","import { RECEIVE_PLAYER_DECK_LIST, RECEIVE_SINGLE_PLAYER_DECK, RESET_DECK_LIST } from '../actions/dmDeckActions'\r\n\r\nconst dmDeckReducer = (state = [], action) => {\r\n    switch (action.type)\r\n    {\r\n        case RECEIVE_PLAYER_DECK_LIST:\r\n            return action.decks;\r\n        case RECEIVE_SINGLE_PLAYER_DECK:\r\n            return action.deck;\r\n        case RESET_DECK_LIST:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dmDeckReducer;","import { combineReducers } from 'redux';\r\nimport dmProductReducer from './dmProductReducer';\r\nimport uiEventReducer from './uiEventReducer';\r\nimport dmDialogReducer from './dmDialogReducer';\r\nimport dmCardReducer from './dmCardReducer';\r\nimport dmDeckReducer from './dmDeckReducer';\r\n\r\nconst appReducer = combineReducers({\r\n    dmProductList: dmProductReducer,\r\n    dmCardList: dmCardReducer,\r\n    dmDeckList: dmDeckReducer,\r\n    uiEvents: uiEventReducer,\r\n    dmDialog: dmDialogReducer\r\n});\r\n\r\nexport default appReducer; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport DmRouter from './router/DmRouter';\nimport DmIntlProvider from './languages/DmIntlProvider';\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './redux/reducers/appReducer';\nimport * as serviceWorker from './serviceWorker';\nimport DMTheme from './theme.json';\n\nconst theme = createMuiTheme(DMTheme);\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <DmIntlProvider>\n                <DmRouter />\n            </DmIntlProvider>\n        </Provider>\n    </MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}